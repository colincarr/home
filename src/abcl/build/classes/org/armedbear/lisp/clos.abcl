"; -*- Mode: Lisp -*-"
(SYSTEM:INIT-FASL :VERSION 42)
(SETQ SYSTEM:*SOURCE* #P"/Users/cpc26/src/abcl/src/org/armedbear/lisp/clos.lisp")
(SETQ SYSTEM::*FASL-UNINTERNED-SYMBOLS* #(#:WHOLE-202795 #:ENVIRONMENT-202796 #:WHOLE-203509 #:ENVIRONMENT-203510 #:WHOLE-206524 #:ENVIRONMENT-206525 #:WHOLE-206612 #:ENVIRONMENT-206613 #:WHOLE-207832 #:ENVIRONMENT-207833 #:WHOLE-208974 #:ENVIRONMENT-208975 #:WHOLE-210631 #:ENVIRONMENT-210632 #:WHOLE-214679 #:ENVIRONMENT-214680 #:WHOLE-215113 #:ENVIRONMENT-215114 #:WHOLE-215170 #:ENVIRONMENT-215171 #:G215315 #:G215748 #:G216232 #:G216665 #:G217161 #:G217594 #:G218090 #:G218523 #:G219019 #:G219452 #:G219948 #:G220381 #:G220877 #:G221310 #:G221806 #:G222239 #:G222735 #:G223168 #:G223664 #:G224097 #:G224593 #:G225026 #:G225736 #:G225885 #:WHOLE-226533 #:ENVIRONMENT-226534 #:G226826 #:G230675 #:G230876 #:G231686 #:WHOLE-231810 #:ENVIRONMENT-231811 #:G231869 #:G232020 #:G232194 #:G232345 #:G232519 #:G232670 #:G232844 #:G232995 #:G233169 #:G233320 #:G233494 #:G233645 #:G233819 #:G233970 #:G234144 #:G234295 #:G234469 #:G234620 #:G234794 #:G234945 #:G235119 #:G235270 #:WHOLE-235444 #:ENVIRONMENT-235445 #:G235826 #:G236406 #:G236531 #:G237023 #:G237148 #:G237273 #:G237398 #:G237523 #:G237648 #:G237773 #:G237900 #:G238025 #:G238265 #:G238390 #:G238515 #:G238640 #:G238765 #:G238890 #:G239015 #:G239454 #:G239722 #:G240510))
(SETQ SYSTEM:*FASL-LOADER* (SYSTEM::MAKE-FASL-CLASS-LOADER "org.armedbear.lisp.clos"))
(SYSTEM:%IN-PACKAGE "MOP")
(EXPORT '(%DEFGENERIC CANONICALIZE-DIRECT-SUPERCLASSES))
(DEFCONSTANT +THE-STANDARD-CLASS+ (FIND-CLASS 'STANDARD-CLASS))
(DEFCONSTANT +THE-FUNCALLABLE-STANDARD-CLASS+ (FIND-CLASS 'FUNCALLABLE-STANDARD-CLASS))
(DEFCONSTANT +THE-STANDARD-OBJECT-CLASS+ (FIND-CLASS 'STANDARD-OBJECT))
(DEFCONSTANT +THE-FUNCALLABLE-STANDARD-OBJECT-CLASS+ (FIND-CLASS 'FUNCALLABLE-STANDARD-OBJECT))
(DEFCONSTANT +THE-STANDARD-METHOD-CLASS+ (FIND-CLASS 'STANDARD-METHOD))
(DEFCONSTANT +THE-T-CLASS+ (FIND-CLASS 'T))
(DEFCONSTANT +THE-STANDARD-SLOT-DEFINITION-CLASS+ (FIND-CLASS 'STANDARD-SLOT-DEFINITION))
(DEFCONSTANT +THE-STANDARD-DIRECT-SLOT-DEFINITION-CLASS+ (FIND-CLASS 'STANDARD-DIRECT-SLOT-DEFINITION))
(DEFCONSTANT +THE-STANDARD-EFFECTIVE-SLOT-DEFINITION-CLASS+ (FIND-CLASS 'STANDARD-EFFECTIVE-SLOT-DEFINITION))
(DEFPARAMETER *CLOS-BOOTING* T)
(FSET 'DEFINE-CLASS->%CLASS-FORWARDER (MAKE-MACRO 'DEFINE-CLASS->%CLASS-FORWARDER 
(SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 0)) 5804 '(NAME))
(PROCLAIM '(NOTINLINE CLASS-NAME))
(FSET 'CLASS-NAME (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 1) 6333 '(&REST ARGS) 
NIL)
(PROCLAIM '(NOTINLINE (SETF CLASS-NAME)))
(FSET '(SETF CLASS-NAME) (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 2) 6419 '(&REST 
ARGS) NIL)
(PROCLAIM '(NOTINLINE CLASS-SLOTS))
(FSET 'CLASS-SLOTS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 3) 6470 '(&REST ARGS) 
NIL)
(PROCLAIM '(NOTINLINE (SETF CLASS-SLOTS)))
(FSET '(SETF CLASS-SLOTS) (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 4) 6515 '(&REST 
ARGS) NIL)
(PROCLAIM '(NOTINLINE CLASS-DIRECT-SLOTS))
(FSET 'CLASS-DIRECT-SLOTS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 5) 6567 '(&REST 
ARGS) NIL)
(PROCLAIM '(NOTINLINE (SETF CLASS-DIRECT-SLOTS)))
(FSET '(SETF CLASS-DIRECT-SLOTS) (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 6) 6619 
'(&REST ARGS) NIL)
(PROCLAIM '(NOTINLINE CLASS-LAYOUT))
(FSET 'CLASS-LAYOUT (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 7) 6678 '(&REST ARGS) 
NIL)
(PROCLAIM '(NOTINLINE (SETF CLASS-LAYOUT)))
(FSET '(SETF CLASS-LAYOUT) (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 8) 6724 '(&REST 
ARGS) NIL)
(PROCLAIM '(NOTINLINE CLASS-DIRECT-SUPERCLASSES))
(FSET 'CLASS-DIRECT-SUPERCLASSES (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 9) 6777 
'(&REST ARGS) NIL)
(PROCLAIM '(NOTINLINE (SETF CLASS-DIRECT-SUPERCLASSES)))
(FSET '(SETF CLASS-DIRECT-SUPERCLASSES) (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
10) 6836 '(&REST ARGS) NIL)
(PROCLAIM '(NOTINLINE CLASS-DIRECT-SUBCLASSES))
(FSET 'CLASS-DIRECT-SUBCLASSES (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 11) 6902 
'(&REST ARGS) NIL)
(PROCLAIM '(NOTINLINE (SETF CLASS-DIRECT-SUBCLASSES)))
(FSET '(SETF CLASS-DIRECT-SUBCLASSES) (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 12) 
6959 '(&REST ARGS) NIL)
(PROCLAIM '(NOTINLINE CLASS-DIRECT-METHODS))
(FSET 'CLASS-DIRECT-METHODS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 13) 7023 '(&REST 
ARGS) NIL)
(PROCLAIM '(NOTINLINE (SETF CLASS-DIRECT-METHODS)))
(FSET '(SETF CLASS-DIRECT-METHODS) (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 14) 7077 
'(&REST ARGS) NIL)
(PROCLAIM '(NOTINLINE CLASS-PRECEDENCE-LIST))
(FSET 'CLASS-PRECEDENCE-LIST (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 15) 7138 '(&REST 
ARGS) NIL)
(PROCLAIM '(NOTINLINE (SETF CLASS-PRECEDENCE-LIST)))
(FSET '(SETF CLASS-PRECEDENCE-LIST) (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 16) 
7193 '(&REST ARGS) NIL)
(PROCLAIM '(NOTINLINE CLASS-FINALIZED-P))
(FSET 'CLASS-FINALIZED-P (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 17) 7255 '(&REST 
ARGS) NIL)
(PROCLAIM '(NOTINLINE (SETF CLASS-FINALIZED-P)))
(FSET '(SETF CLASS-FINALIZED-P) (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 18) 7306 
'(&REST ARGS) NIL)
(PROCLAIM '(NOTINLINE CLASS-DEFAULT-INITARGS))
(FSET 'CLASS-DEFAULT-INITARGS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 19) 7364 '(&REST 
ARGS) NIL)
(PROCLAIM '(NOTINLINE (SETF CLASS-DEFAULT-INITARGS)))
(FSET '(SETF CLASS-DEFAULT-INITARGS) (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 20) 
7420 '(&REST ARGS) NIL)
(PROCLAIM '(NOTINLINE CLASS-DIRECT-DEFAULT-INITARGS))
(FSET 'CLASS-DIRECT-DEFAULT-INITARGS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 21) 
7483 '(&REST ARGS) NIL)
(PROCLAIM '(NOTINLINE (SETF CLASS-DIRECT-DEFAULT-INITARGS)))
(FSET '(SETF CLASS-DIRECT-DEFAULT-INITARGS) (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
22) 7546 '(&REST ARGS) NIL)
(PROCLAIM '(NOTINLINE ADD-DIRECT-SUBCLASS REMOVE-DIRECT-SUBCLASS))
(FSET 'ADD-DIRECT-SUBCLASS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 23) 7682 '(SUPERCLASS 
SUBCLASS) NIL)
(FSET 'REMOVE-DIRECT-SUBCLASS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 24) 7841 '(SUPERCLASS 
SUBCLASS) NIL)
(FSET 'FIXUP-STANDARD-CLASS-HIERARCHY (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 25) 
8003 'NIL NIL)
(FIXUP-STANDARD-CLASS-HIERARCHY)
(FSET 'STD-CLASS-P (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 27) 9597 '(CLASS) NIL)
(FSET 'NO-APPLICABLE-METHOD (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 28) 9766 '(GENERIC-FUNCTION 
&REST ARGS) NIL)
(FSET 'FUNCTION-KEYWORDS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 29) 9967 '(METHOD) 
NIL)
(PROCLAIM '(NOTINLINE MAP-DEPENDENTS))
(FSET 'MAP-DEPENDENTS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 30) 10074 '(METAOBJECT 
FUNCTION) NIL)
(FSET 'PUSH-ON-END (MAKE-MACRO 'PUSH-ON-END (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
31)) 10201 '(VALUE LOCATION))
(FSET '(SETF GETF*) (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 32) 10294 '(NEW-VALUE 
PLIST KEY) NIL)
(FSET 'MAPAPPEND (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 33) 10689 '(FUN &REST ARGS) 
NIL)
(FSET 'MAPPLIST (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 34) 10865 '(FUN X) NIL)
(PUT 'STD-SLOT-VALUE 'SETF-INVERSE 'SET-STD-SLOT-VALUE)
(PUT 'STD-INSTANCE-LAYOUT 'SETF-INVERSE '%SET-STD-INSTANCE-LAYOUT)
(PUT 'STANDARD-INSTANCE-ACCESS 'SETF-INVERSE '%SET-STANDARD-INSTANCE-ACCESS)
(FSET 'FUNCALLABLE-STANDARD-INSTANCE-ACCESS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
35) 11162 '(INSTANCE LOCATION) NIL)
(PUT 'FUNCALLABLE-STANDARD-INSTANCE-ACCESS 'SETF-INVERSE '%SET-STANDARD-INSTANCE-ACCESS)
(FSET '(SETF FIND-CLASS) (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 36) 11351 '(NEW-VALUE 
SYMBOL &OPTIONAL ERRORP ENVIRONMENT) NIL)
(FSET 'CANONICALIZE-DIRECT-SLOTS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 37) 11503 
'(DIRECT-SLOTS) NIL)
(FSET 'CANONICALIZE-DIRECT-SLOT (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 38) 11614 
'(SPEC) NIL)
(FSET 'MAYBE-NOTE-NAME-DEFINED (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 40) 14978 
'(NAME) NIL)
(FSET 'CANONICALIZE-DEFCLASS-OPTIONS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 41) 
15085 '(OPTIONS) NIL)
(FSET 'CANONICALIZE-DEFCLASS-OPTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 42) 
15187 '(OPTION) NIL)
(FSET 'MAKE-INITFUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 44) 15704 '(INITFORM) 
NIL)
(FSET 'SLOT-DEFINITION-ALLOCATION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 45) 15778 
'(SLOT-DEFINITION) NIL)
(PROCLAIM '(NOTINLINE (SETF SLOT-DEFINITION-ALLOCATION)))
(FSET '(SETF SLOT-DEFINITION-ALLOCATION) (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
46) 15941 '(VALUE SLOT-DEFINITION) NIL)
(FSET 'SLOT-DEFINITION-INITARGS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 47) 16072 
'(SLOT-DEFINITION) NIL)
(PROCLAIM '(NOTINLINE (SETF SLOT-DEFINITION-INITARGS)))
(FSET '(SETF SLOT-DEFINITION-INITARGS) (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 48) 
16229 '(VALUE SLOT-DEFINITION) NIL)
(FSET 'SLOT-DEFINITION-INITFORM (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 49) 16356 
'(SLOT-DEFINITION) NIL)
(PROCLAIM '(NOTINLINE (SETF SLOT-DEFINITION-INITFORM)))
(FSET '(SETF SLOT-DEFINITION-INITFORM) (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 50) 
16513 '(VALUE SLOT-DEFINITION) NIL)
(FSET 'SLOT-DEFINITION-INITFUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 51) 
16640 '(SLOT-DEFINITION) NIL)
(PROCLAIM '(NOTINLINE (SETF SLOT-DEFINITION-INITFUNCTION)))
(FSET '(SETF SLOT-DEFINITION-INITFUNCTION) (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
52) 16809 '(VALUE SLOT-DEFINITION) NIL)
(FSET 'SLOT-DEFINITION-NAME (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 53) 16944 '(SLOT-DEFINITION) 
NIL)
(PROCLAIM '(NOTINLINE (SETF SLOT-DEFINITION-NAME)))
(FSET '(SETF SLOT-DEFINITION-NAME) (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 54) 17088 
'(VALUE SLOT-DEFINITION) NIL)
(FSET 'SLOT-DEFINITION-READERS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 55) 17206 
'(SLOT-DEFINITION) NIL)
(PROCLAIM '(NOTINLINE (SETF SLOT-DEFINITION-READERS)))
(FSET '(SETF SLOT-DEFINITION-READERS) (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 56) 
17360 '(VALUE SLOT-DEFINITION) NIL)
(FSET 'SLOT-DEFINITION-WRITERS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 57) 17485 
'(SLOT-DEFINITION) NIL)
(PROCLAIM '(NOTINLINE (SETF SLOT-DEFINITION-WRITERS)))
(FSET '(SETF SLOT-DEFINITION-WRITERS) (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 58) 
17639 '(VALUE SLOT-DEFINITION) NIL)
(FSET 'SLOT-DEFINITION-ALLOCATION-CLASS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
59) 17764 '(SLOT-DEFINITION) NIL)
(PROCLAIM '(NOTINLINE (SETF SLOT-DEFINITION-ALLOCATION-CLASS)))
(FSET '(SETF SLOT-DEFINITION-ALLOCATION-CLASS) (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
60) 17945 '(VALUE SLOT-DEFINITION) NIL)
(FSET 'SLOT-DEFINITION-LOCATION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 61) 18088 
'(SLOT-DEFINITION) NIL)
(PROCLAIM '(NOTINLINE (SETF SLOT-DEFINITION-LOCATION-CLASS)))
(FSET '(SETF SLOT-DEFINITION-LOCATION) (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 62) 
18251 '(VALUE SLOT-DEFINITION) NIL)
(FSET 'SLOT-DEFINITION-TYPE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 63) 18378 '(SLOT-DEFINITION) 
NIL)
(PROCLAIM '(NOTINLINE (SETF SLOT-DEFINITION-TYPE)))
(FSET '(SETF SLOT-DEFINITION-TYPE) (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 64) 18524 
'(VALUE SLOT-DEFINITION) NIL)
(FSET 'SLOT-DEFINITION-DOCUMENTATION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 65) 
18644 '(SLOT-DEFINITION) NIL)
(PROCLAIM '(NOTINLINE (SETF SLOT-DEFINITION-DOCUMENTATION)))
(FSET '(SETF SLOT-DEFINITION-DOCUMENTATION) (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
66) 18816 '(VALUE SLOT-DEFINITION) NIL)
(FSET 'INIT-SLOT-DEFINITION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 67) 18953 '(SLOT 
&KEY NAME (INITARGS NIL) (INITFORM NIL) (INITFUNCTION NIL) (READERS NIL) (WRITERS 
NIL) (ALLOCATION :INSTANCE) (ALLOCATION-CLASS NIL) (TYPE T) (DOCUMENTATION NIL)) 
NIL)
(PROCLAIM '(NOTINLINE DIRECT-SLOT-DEFINITION-CLASS))
(FSET 'DIRECT-SLOT-DEFINITION-CLASS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 68) 
20050 '(CLASS &REST ARGS) NIL)
(FSET 'MAKE-DIRECT-SLOT-DEFINITION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 69) 20184 
'(CLASS &REST ARGS) NIL)
(PROCLAIM '(NOTINLINE EFFECTIVE-SLOT-DEFINITION-CLASS))
(FSET 'EFFECTIVE-SLOT-DEFINITION-CLASS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 70) 
20769 '(CLASS &REST ARGS) NIL)
(FSET 'MAKE-EFFECTIVE-SLOT-DEFINITION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 71) 
20909 '(CLASS &REST ARGS) NIL)
(PROCLAIM '(NOTINLINE COMPUTE-DEFAULT-INITARGS))
(FSET 'COMPUTE-DEFAULT-INITARGS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 72) 21448 
'(CLASS) NIL)
(FSET 'STD-COMPUTE-DEFAULT-INITARGS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 73) 
21528 '(CLASS) NIL)
(FSET 'STD-FINALIZE-INHERITANCE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 75) 21767 
'(CLASS) NIL)
(PROCLAIM '(NOTINLINE FINALIZE-INHERITANCE))
(FSET 'FINALIZE-INHERITANCE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 76) 24398 '(CLASS) 
NIL)
(FSET 'STD-COMPUTE-CLASS-PRECEDENCE-LIST (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
77) 24470 '(CLASS) NIL)
(FSET 'TOPOLOGICAL-SORT (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 78) 25084 '(ELEMENTS 
CONSTRAINTS TIE-BREAKER) NIL)
(FSET 'STD-TIE-BREAKER-RULE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 80) 26643 '(MINIMAL-ELEMENTS 
CPL-SO-FAR) NIL)
(FSET 'COLLECT-SUPERCLASSES* (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 81) 27501 '(CLASS) 
NIL)
(FSET 'LOCAL-PRECEDENCE-ORDERING (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 83) 28516 
'(CLASS) NIL)
(FSET 'STD-COMPUTE-SLOTS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 84) 28847 '(CLASS) 
NIL)
(FSET 'STD-COMPUTE-EFFECTIVE-SLOT-DEFINITION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
87) 29810 '(CLASS NAME DIRECT-SLOTS) NIL)
(FSET 'FIND-SLOT-DEFINITION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 88) 31350 '(CLASS 
SLOT-NAME) NIL)
(FSET 'SLOT-LOCATION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 89) 31715 '(CLASS SLOT-NAME) 
NIL)
(FSET 'INSTANCE-SLOT-LOCATION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 90) 31878 
'(INSTANCE SLOT-NAME) NIL)
(FSET 'SLOT-VALUE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 91) 32038 '(OBJECT SLOT-NAME) 
NIL)
(FSET '%SET-SLOT-VALUE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 92) 32470 '(OBJECT 
SLOT-NAME NEW-VALUE) NIL)
(PUT 'SLOT-VALUE 'SETF-INVERSE '%SET-SLOT-VALUE)
(FSET 'SLOT-BOUNDP (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 93) 33009 '(OBJECT SLOT-NAME) 
NIL)
(FSET 'STD-SLOT-MAKUNBOUND (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 94) 33276 '(INSTANCE 
SLOT-NAME) NIL)
(FSET 'SLOT-MAKUNBOUND (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 95) 33685 '(OBJECT 
SLOT-NAME) NIL)
(FSET 'STD-SLOT-EXISTS-P (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 96) 33968 '(INSTANCE 
SLOT-NAME) NIL)
(FSET 'SLOT-EXISTS-P (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 97) 34128 '(OBJECT 
SLOT-NAME) NIL)
(FSET 'INSTANCE-SLOT-P (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 98) 34339 '(SLOT) 
NIL)
(FSET 'STD-ALLOCATE-INSTANCE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 99) 34422 '(CLASS) 
NIL)
(FSET 'ALLOCATE-FUNCALLABLE-INSTANCE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 100) 
34499 '(CLASS) NIL)
(PROCLAIM '(NOTINLINE CLASS-PROTOTYPE))
(FSET 'CLASS-PROTOTYPE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 102) 35159 '(CLASS) 
NIL)
(FSET 'MAYBE-FINALIZE-CLASS-SUBTREE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 103) 
35312 '(CLASS) NIL)
(FSET 'MAKE-INSTANCE-STANDARD-CLASS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 104) 
35564 '(METACLASS &REST INITARGS &KEY NAME DIRECT-SUPERCLASSES DIRECT-SLOTS DIRECT-DEFAULT-INITARGS 
DOCUMENTATION) NIL)
(FSET 'MAKE-OR-FIND-INSTANCE-FUNCALLABLE-STANDARD-CLASS (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 105) 36856 '(METACLASS &REST INITARGS &KEY NAME DIRECT-SUPERCLASSES 
DIRECT-SLOTS DIRECT-DEFAULT-INITARGS DOCUMENTATION) NIL)
(FSET 'CANONICALIZE-DIRECT-SUPERCLASS-LIST (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
106) 37777 '(CLASS DIRECT-SUPERCLASSES) NIL)
(FSET 'STD-AFTER-INITIALIZATION-FOR-CLASSES (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
107) 38329 '(CLASS &KEY DIRECT-SUPERCLASSES DIRECT-SLOTS DIRECT-DEFAULT-INITARGS 
&ALLOW-OTHER-KEYS) NIL)
(FSET 'DEFINE-PRIMORDIAL-CLASS (MAKE-MACRO 'DEFINE-PRIMORDIAL-CLASS (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 109)) 39417 '(NAME SUPERCLASSES DIRECT-SLOTS))
(FSET 'DEFINE-FUNCALLABLE-PRIMORDIAL-CLASS (MAKE-MACRO 'DEFINE-FUNCALLABLE-PRIMORDIAL-CLASS 
(SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 110)) 40022 '(NAME SUPERCLASSES DIRECT-SLOTS))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 111))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 114))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 118))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 119))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 120))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 122))
(DEFCONSTANT +THE-STANDARD-READER-METHOD-CLASS+ (FIND-CLASS 'STANDARD-READER-METHOD))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 123))
(DEFCONSTANT +THE-STANDARD-WRITER-METHOD-CLASS+ (FIND-CLASS 'STANDARD-WRITER-METHOD))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 124))
(DEFCONSTANT +THE-STRUCTURE-CLASS+ (FIND-CLASS 'STRUCTURE-CLASS))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 125))
(DEFCONSTANT +THE-FORWARD-REFERENCED-CLASS+ (FIND-CLASS 'FORWARD-REFERENCED-CLASS))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 138))
(DEFVAR *EXTENSIBLE-BUILT-IN-CLASSES* (LIST (FIND-CLASS 'SEQUENCE) (FIND-CLASS 'JAVA:JAVA-OBJECT)))
(DEFVAR *MAKE-INSTANCE-INITARGS-CACHE* (MAKE-HASH-TABLE :TEST (FUNCTION EQ)) "Cached sets of allowable initargs, keyed on the class they belong to.")
(DEFVAR *REINITIALIZE-INSTANCE-INITARGS-CACHE* (MAKE-HASH-TABLE :TEST (FUNCTION EQ)) 
"Cached sets of allowable initargs, keyed on the class they belong to.")
(FSET 'EXPAND-LONG-DEFCOMBIN (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 139) 43525 
'(NAME ARGS) NIL)
(FSET '%MAKE-LONG-METHOD-COMBINATION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 140) 
43827 '(&KEY NAME DOCUMENTATION LAMBDA-LIST METHOD-GROUP-SPECS ARGS-LAMBDA-LIST GENERIC-FUNCTION-SYMBOL 
FUNCTION ARGUMENTS DECLARATIONS FORMS) NIL)
(FSET 'METHOD-COMBINATION-NAME (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 141) 45076 
'(METHOD-COMBINATION) NIL)
(FSET 'METHOD-COMBINATION-DOCUMENTATION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
142) 45232 '(METHOD-COMBINATION) NIL)
(FSET 'SHORT-METHOD-COMBINATION-OPERATOR (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
143) 45406 '(METHOD-COMBINATION) NIL)
(FSET 'SHORT-METHOD-COMBINATION-IDENTITY-WITH-ONE-ARGUMENT (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 144) 45577 '(METHOD-COMBINATION) NIL)
(FSET 'LONG-METHOD-COMBINATION-LAMBDA-LIST (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
145) 45784 '(METHOD-COMBINATION) NIL)
(FSET 'LONG-METHOD-COMBINATION-METHOD-GROUP-SPECS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
146) 45964 '(METHOD-COMBINATION) NIL)
(FSET 'LONG-METHOD-COMBINATION-ARGS-LAMBDA-LIST (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
147) 46153 '(METHOD-COMBINATION) NIL)
(FSET 'LONG-METHOD-COMBINATION-GENERIC-FUNCTION-SYMBOL (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 148) 46338 '(METHOD-COMBINATION) NIL)
(FSET 'LONG-METHOD-COMBINATION-FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
149) 46537 '(METHOD-COMBINATION) NIL)
(FSET 'LONG-METHOD-COMBINATION-ARGUMENTS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
150) 46706 '(METHOD-COMBINATION) NIL)
(FSET 'LONG-METHOD-COMBINATION-DECLARATIONS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
151) 46877 '(METHOD-COMBINATION) NIL)
(FSET 'LONG-METHOD-COMBINATION-FORMS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 152) 
47054 '(METHOD-COMBINATION) NIL)
(FSET 'EXPAND-SHORT-DEFCOMBIN (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 153) 47217 
'(WHOLE) NIL)
(FSET 'DEFINE-METHOD-COMBINATION (MAKE-MACRO 'DEFINE-METHOD-COMBINATION (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 154)) 48094 '(&WHOLE FORM NAME &REST ARGS))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 155))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 156))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 157))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 158))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 159))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 160))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 161))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 162))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 163))
(FSET 'METHOD-GROUP-P (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 164) 48885 '(SELECTER 
QUALIFIERS) NIL)
(FSET 'CHECK-VARIABLE-NAME (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 165) 49473 '(NAME) 
NIL)
(FSET 'CANONICALIZE-METHOD-GROUP-SPEC (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 167) 
49669 '(SPEC) NIL)
(FSET 'EXTRACT-REQUIRED-PART (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 169) 50994 
'(LAMBDA-LIST) NIL)
(FSET 'EXTRACT-SPECIFIED-PART (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 172) 51573 
'(KEY LAMBDA-LIST) NIL)
(FSET 'EXTRACT-OPTIONAL-PART (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 174) 51887 
'(LAMBDA-LIST) NIL)
(FSET 'PARSE-DEFINE-METHOD-COMBINATION-ARGS-LAMBDA-LIST (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 175) 51982 '(LAMBDA-LIST) NIL)
(FSET 'WRAP-WITH-CALL-METHOD-MACRO (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 179) 
53423 '(GF ARGS-VAR EMF-FORM) NIL)
(FSET 'ASSERT-UNAMBIGUOUS-METHOD-SORTING (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
180) 54814 '(GROUP-NAME METHODS) NIL)
(FSET 'WITH-METHOD-GROUPS (MAKE-MACRO 'WITH-METHOD-GROUPS (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 181)) 55403 '(METHOD-GROUP-SPECS METHODS-FORM &BODY FORMS))
(FSET 'METHOD-COMBINATION-TYPE-LAMBDA-WITH-ARGS-EMF (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
185) 57282 '(&KEY ARGS-LAMBDA-LIST GENERIC-FUNCTION-SYMBOL FORMS &ALLOW-OTHER-KEYS) 
NIL)
(FSET 'METHOD-COMBINATION-TYPE-LAMBDA (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 186) 
64220 '(&REST ALL-ARGS &KEY NAME LAMBDA-LIST ARGS-LAMBDA-LIST GENERIC-FUNCTION-SYMBOL 
METHOD-GROUP-SPECS DECLARATIONS FORMS &ALLOW-OTHER-KEYS) NIL)
(FSET 'DECLARATIONP (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 187) 65304 '(EXPR) NIL)
(FSET 'LONG-FORM-METHOD-COMBINATION-ARGS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
188) 65379 '(ARGS) NIL)
(FSET 'DEFINE-LONG-FORM-METHOD-COMBINATION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
195) 66895 '(NAME LAMBDA-LIST METHOD-GROUP-SPECS &REST ARGS) NIL)
(FSET 'STD-FIND-METHOD-COMBINATION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 196) 
67508 '(GF NAME OPTIONS) NIL)
(PROCLAIM '(NOTINLINE FIND-METHOD-COMBINATION))
(FSET 'FIND-METHOD-COMBINATION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 197) 69027 
'(GF NAME OPTIONS) NIL)
(DEFCONSTANT +THE-STANDARD-METHOD-COMBINATION+ (LET ((INSTANCE (STD-ALLOCATE-INSTANCE 
(FIND-CLASS 'METHOD-COMBINATION)))) (SETF (STD-SLOT-VALUE INSTANCE 'NAME) 'STANDARD) 
(SETF (STD-SLOT-VALUE INSTANCE '%DOCUMENTATION) "The standard method combination.") 
(SETF (STD-SLOT-VALUE INSTANCE 'OPTIONS) NIL) INSTANCE) "The standard method combination.
Do not use this object for identity since it changes between
compile-time and run-time.  To detect the standard method combination,
compare the method combination name to the symbol 'standard.")
(PUT 'STANDARD 'METHOD-COMBINATION-OBJECT +THE-STANDARD-METHOD-COMBINATION+)
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 198))
(DEFCONSTANT +THE-STANDARD-GENERIC-FUNCTION-CLASS+ (FIND-CLASS 'STANDARD-GENERIC-FUNCTION))
(FSET 'STD-GENERIC-FUNCTION-P (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 210) 70792 
'(GF) NIL)
(DEFPARAMETER *EQL-SPECIALIZER-TABLE* (MAKE-HASH-TABLE :TEST 'EQL))
(FSET 'INTERN-EQL-SPECIALIZER (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 211) 70957 
'(OBJECT) NIL)
(FSET 'EQL-SPECIALIZER-OBJECT (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 212) 71468 
'(EQL-SPECIALIZER) NIL)
(FSET 'STD-METHOD-FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 213) 71608 '(METHOD) 
NIL)
(FSET 'STD-METHOD-GENERIC-FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 214) 
71830 '(METHOD) NIL)
(FSET 'STD-METHOD-SPECIALIZERS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 215) 71926 
'(METHOD) NIL)
(FSET 'STD-METHOD-QUALIFIERS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 216) 72013 
'(METHOD) NIL)
(FSET 'STD-ACCESSOR-METHOD-SLOT-DEFINITION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
217) 72096 '(ACCESSOR-METHOD) NIL)
(FSET 'STD-METHOD-FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 218) 72217 
'(METHOD) NIL)
(FSET 'STD-FUNCTION-KEYWORDS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 219) 72336 
'(METHOD) NIL)
(PROCLAIM '(NOTINLINE METHOD-GENERIC-FUNCTION))
(FSET 'METHOD-GENERIC-FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 220) 72631 
'(METHOD) NIL)
(PROCLAIM '(NOTINLINE METHOD-FUNCTION))
(FSET 'METHOD-FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 221) 72750 '(METHOD) 
NIL)
(PROCLAIM '(NOTINLINE METHOD-SPECIALIZERS))
(FSET 'METHOD-SPECIALIZERS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 222) 72857 '(METHOD) 
NIL)
(PROCLAIM '(NOTINLINE METHOD-QUALIFIERS))
(FSET 'METHOD-QUALIFIERS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 223) 72970 '(METHOD) 
NIL)
(FSET 'GENERIC-FUNCTION-NAME (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 224) 73038 
'(GF) NIL)
(FSET 'GENERIC-FUNCTION-LAMBDA-LIST (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 225) 
73704 '(GF) NIL)
(FSET 'GENERIC-FUNCTION-METHODS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 226) 73787 
'(GF) NIL)
(FSET 'GENERIC-FUNCTION-METHOD-CLASS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 227) 
73862 '(GF) NIL)
(FSET 'GENERIC-FUNCTION-METHOD-COMBINATION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
228) 73947 '(GF) NIL)
(FSET 'GENERIC-FUNCTION-ARGUMENT-PRECEDENCE-ORDER (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
229) 74045 '(GF) NIL)
(FSET 'GENERIC-FUNCTION-REQUIRED-ARGUMENTS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
230) 74156 '(GF) NIL)
(FSET 'GENERIC-FUNCTION-OPTIONAL-ARGUMENTS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
231) 74248 '(GF) NIL)
(FSET '(SETF METHOD-LAMBDA-LIST) (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 232) 74340 
'(NEW-VALUE METHOD) NIL)
(FSET '(SETF METHOD-QUALIFIERS) (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 233) 74455 
'(NEW-VALUE METHOD) NIL)
(FSET 'METHOD-DOCUMENTATION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 234) 74568 '(METHOD) 
NIL)
(FSET '(SETF METHOD-DOCUMENTATION) (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 235) 
74653 '(NEW-VALUE METHOD) NIL)
(FSET 'DEFGENERIC (MAKE-MACRO 'DEFGENERIC (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
236)) 74772 '(FUNCTION-NAME LAMBDA-LIST &REST OPTIONS-AND-METHOD-DESCRIPTIONS))
(FSET 'CANONICALIZE-DEFGENERIC-OPTIONS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 237) 
76535 '(OPTIONS) NIL)
(FSET 'CANONICALIZE-DEFGENERIC-OPTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 238) 
76641 '(OPTION) NIL)
(FSET 'ARGUMENT-PRECEDENCE-ORDER-INDICES (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
239) 77099 '(APO REQ) NIL)
(FSET 'FIND-GENERIC-FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 240) 78072 
'(NAME &OPTIONAL (ERRORP T)) NIL)
(FSET 'LAMBDA-LISTS-CONGRUENT-P (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 241) 78626 
'(LAMBDA-LIST1 LAMBDA-LIST2) NIL)
(FSET '%DEFGENERIC (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 242) 78926 '(FUNCTION-NAME 
&REST ALL-KEYS) NIL)
(PROCLAIM '(NOTINLINE ENSURE-GENERIC-FUNCTION))
(FSET 'ENSURE-GENERIC-FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 244) 80023 
'(FUNCTION-NAME &REST ALL-KEYS &KEY (LAMBDA-LIST NIL LAMBDA-LIST-SUPPLIED-P) (GENERIC-FUNCTION-CLASS 
+THE-STANDARD-GENERIC-FUNCTION-CLASS+) (METHOD-CLASS +THE-STANDARD-METHOD-CLASS+) 
(METHOD-COMBINATION +THE-STANDARD-METHOD-COMBINATION+ MC-P) ARGUMENT-PRECEDENCE-ORDER 
(DOCUMENTATION NIL DOCUMENTATION-SUPPLIED-P) &ALLOW-OTHER-KEYS) NIL)
(FSET 'COLLECT-EQL-SPECIALIZER-OBJECTS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 245) 
83407 '(GENERIC-FUNCTION) NIL)
(FSET 'FINALIZE-STANDARD-GENERIC-FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
246) 83790 '(GF) NIL)
(FSET 'MAKE-INSTANCE-STANDARD-GENERIC-FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
247) 84240 '(GENERIC-FUNCTION-CLASS &KEY NAME LAMBDA-LIST (METHOD-CLASS +THE-STANDARD-METHOD-CLASS+) 
(METHOD-COMBINATION +THE-STANDARD-METHOD-COMBINATION+) ARGUMENT-PRECEDENCE-ORDER 
DECLARATIONS DOCUMENTATION) NIL)
(FSET 'CANONICALIZE-SPECIALIZERS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 248) 86260 
'(SPECIALIZERS) NIL)
(FSET 'CANONICALIZE-SPECIALIZER (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 249) 86361 
'(SPECIALIZER) NIL)
(FSET 'PARSE-DEFMETHOD (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 250) 87131 '(ARGS) 
NIL)
(FSET 'REQUIRED-PORTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 251) 88138 '(GF 
ARGS) NIL)
(FSET 'EXTRACT-LAMBDA-LIST (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 252) 88504 '(SPECIALIZED-LAMBDA-LIST) 
NIL)
(FSET 'EXTRACT-SPECIALIZER-NAMES (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 253) 89136 
'(SPECIALIZED-LAMBDA-LIST) NIL)
(FSET 'GET-KEYWORD-FROM-ARG (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 254) 89293 '(ARG) 
NIL)
(FSET 'ANALYZE-LAMBDA-LIST (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 255) 89458 '(LAMBDA-LIST) 
NIL)
(FSET 'CHECK-METHOD-LAMBDA-LIST (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 256) 92617 
'(NAME METHOD-LAMBDA-LIST GF-LAMBDA-LIST) NIL)
(FSET 'CHECK-ARGUMENT-PRECEDENCE-ORDER (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 258) 
96291 '(LAMBDA-LIST ARGUMENT-PRECEDENCE-ORDER) NIL)
(DEFVAR *GF-INITIALIZE-INSTANCE* NIL "Cached value of the INITIALIZE-INSTANCE generic function.
Initialized with the true value near the end of the file.")
(DEFVAR *GF-ALLOCATE-INSTANCE* NIL "Cached value of the ALLOCATE-INSTANCE generic function.
Initialized with the true value near the end of the file.")
(DEFVAR *GF-SHARED-INITIALIZE* NIL "Cached value of the SHARED-INITIALIZE generic function.
Initialized with the true value near the end of the file.")
(DEFVAR *GF-REINITIALIZE-INSTANCE* NIL "Cached value of the REINITIALIZE-INSTANCE generic function.
Initialized with the true value near the end of the file.")
(PROCLAIM '(FTYPE (FUNCTION * METHOD) ENSURE-METHOD))
(FSET 'ENSURE-METHOD (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 259) 97493 '(NAME &REST 
ALL-KEYS) NIL)
(FSET 'MAKE-INSTANCE-STANDARD-METHOD (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 261) 
98964 '(GF &KEY LAMBDA-LIST QUALIFIERS SPECIALIZERS DOCUMENTATION FUNCTION FAST-FUNCTION) 
NIL)
(PROCLAIM '(NOTINLINE ADD-DIRECT-METHOD))
(FSET 'ADD-DIRECT-METHOD (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 262) 100264 '(SPECIALIZER 
METHOD) NIL)
(PROCLAIM '(NOTINLINE REMOVE-DIRECT-METHOD))
(FSET 'REMOVE-DIRECT-METHOD (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 263) 100525 
'(SPECIALIZER METHOD) NIL)
(FSET 'STD-ADD-METHOD (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 264) 100861 '(GF METHOD) 
NIL)
(FSET 'STD-REMOVE-METHOD (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 265) 101620 '(GF 
METHOD) NIL)
(FSET '%FIND-METHOD (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 266) 101964 '(GF QUALIFIERS 
SPECIALIZERS &OPTIONAL (ERRORP T)) NIL)
(FSET 'FAST-CALLABLE-P (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 268) 103029 '(GF) 
NIL)
(FSET 'STD-COMPUTE-DISCRIMINATING-FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
269) 103297 '(GF) NIL)
(FSET 'SORT-METHODS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 280) 109770 '(METHODS 
GF REQUIRED-CLASSES) NIL)
(FSET 'METHOD-APPLICABLE-P (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 283) 110511 '(METHOD 
ARGS) NIL)
(FSET 'STD-COMPUTE-APPLICABLE-METHODS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 284) 
110970 '(GF ARGS) NIL)
(PROCLAIM '(NOTINLINE COMPUTE-APPLICABLE-METHODS))
(FSET 'COMPUTE-APPLICABLE-METHODS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 285) 111344 
'(GF ARGS) NIL)
(FSET 'METHOD-APPLICABLE-USING-CLASSES-P (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
286) 111432 '(METHOD CLASSES) NIL)
(FSET 'CHECK-APPLICABLE-METHOD-KEYWORD-ARGS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
287) 112499 '(GF ARGS KEYWORD-ARGS APPLICABLE-KEYWORDS) NIL)
(FSET 'COMPUTE-APPLICABLE-KEYWORDS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 288) 
113267 '(GF APPLICABLE-METHODS) NIL)
(FSET 'WRAP-EMFUN-FOR-KEYWORD-ARGS-CHECK (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
289) 113841 '(GF EMFUN NON-KEYWORD-ARGS APPLICABLE-KEYWORDS) NIL)
(FSET 'SLOW-METHOD-LOOKUP (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 291) 114143 '(GF 
ARGS) NIL)
(FSET 'SUB-SPECIALIZER-P (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 292) 115956 '(C1 
C2 C-ARG) NIL)
(FSET 'STD-METHOD-MORE-SPECIFIC-P (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 293) 116056 
'(METHOD1 METHOD2 REQUIRED-CLASSES ARGUMENT-PRECEDENCE-ORDER) NIL)
(FSET 'PRIMARY-METHOD-P (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 294) 117486 '(METHOD) 
NIL)
(FSET 'BEFORE-METHOD-P (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 295) 117598 '(METHOD) 
NIL)
(FSET 'AFTER-METHOD-P (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 296) 117680 '(METHOD) 
NIL)
(FSET 'AROUND-METHOD-P (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 297) 117760 '(METHOD) 
NIL)
(FSET 'PROCESS-NEXT-METHOD-LIST (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 298) 117842 
'(NEXT-METHOD-LIST) NIL)
(FSET 'STD-COMPUTE-EFFECTIVE-METHOD (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 300) 
118566 '(GF METHOD-COMBINATION METHODS) NIL)
(FSET 'GENERATE-EMF-LAMBDA (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 304) 123381 '(METHOD-FUNCTION 
NEXT-EMFUN) NIL)
(FSET 'COMPUTE-PRIMARY-EMFUN (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 306) 123540 
'(METHODS) NIL)
(DEFVAR *CALL-NEXT-METHOD-P*)
(DEFVAR *NEXT-METHOD-P-P*)
(FSET 'WALK-FORM (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 308) 123909 '(FORM) NIL)
(FSET 'COMPUTE-METHOD-FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 309) 124213 
'(LAMBDA-EXPRESSION) NIL)
(FSET 'COMPUTE-METHOD-FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 310) 
127184 '(LAMBDA-EXPRESSION) NIL)
(PROCLAIM '(NOTINLINE MAKE-METHOD-LAMBDA))
(FSET 'MAKE-METHOD-LAMBDA (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 311) 129247 '(GENERIC-FUNCTION 
METHOD LAMBDA-EXPRESSION ENV) NIL)
(FSET 'ALLOW-OTHER-KEYS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 312) 129430 '(LAMBDA-LIST) 
NIL)
(FSET 'DEFMETHOD (MAKE-MACRO 'DEFMETHOD (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
313)) 130304 '(&REST ARGS &ENVIRONMENT ENV))
(FSET 'MAKE-INSTANCE-STANDARD-ACCESSOR-METHOD (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
314) 131837 '(METHOD-CLASS &KEY LAMBDA-LIST QUALIFIERS SPECIALIZERS DOCUMENTATION 
FUNCTION FAST-FUNCTION SLOT-DEFINITION) NIL)
(FSET 'ADD-READER-METHOD (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 315) 133110 '(CLASS 
FUNCTION-NAME SLOT-DEFINITION) NIL)
(FSET 'ADD-WRITER-METHOD (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 317) 135526 '(CLASS 
FUNCTION-NAME SLOT-DEFINITION) NIL)
(FSET 'ATOMIC-DEFGENERIC (MAKE-MACRO 'ATOMIC-DEFGENERIC (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 319)) 138055 '(FUNCTION-NAME &REST REST))
(FSET 'REDEFINE-CLASS-FORWARDER (MAKE-MACRO 'REDEFINE-CLASS-FORWARDER (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 320)) 138905 '(NAME SLOT &OPTIONAL BODY-ALIST))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 322))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 333))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 334))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 345))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 346))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 357))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 358))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 369))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 370))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 381))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 382))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 393))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 394))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 405))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 406))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 417))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 418))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 429))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 430))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 441))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 442))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 453))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 454))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 465))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 466))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 477))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 478))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 489))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 490))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 501))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 502))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 513))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 514))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 525))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 526))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 537))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 538))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 549))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 550))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 561))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 562))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 573))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 574))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 585))
(FSET 'CHECK-DUPLICATE-SLOTS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 586) 142837 
'(SLOTS) NIL)
(FSET 'CHECK-DUPLICATE-DEFAULT-INITARGS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
588) 143216 '(INITARGS) NIL)
(FSET 'CANONICALIZE-DIRECT-SUPERCLASSES (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
589) 143668 '(DIRECT-SUPERCLASSES) NIL)
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 590))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 593))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 594))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 597))
(FSET 'ENSURE-CLASS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 598) 144890 '(NAME &REST 
ALL-KEYS &KEY &ALLOW-OTHER-KEYS) NIL)
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 599))
(ENSURE-METHOD 'ENSURE-CLASS-USING-CLASS :LAMBDA-LIST '(CLASS NAME &KEY DIRECT-SLOTS 
DIRECT-DEFAULT-INITARGS &ALLOW-OTHER-KEYS) :QUALIFIERS '(:BEFORE) :SPECIALIZERS (CANONICALIZE-SPECIALIZERS 
(LIST 'T 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 600))
(ENSURE-METHOD 'ENSURE-CLASS-USING-CLASS :LAMBDA-LIST '(CLASS NAME &REST ALL-KEYS 
&KEY (METACLASS +THE-STANDARD-CLASS+) DIRECT-SUPERCLASSES &ALLOW-OTHER-KEYS) :QUALIFIERS 
'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'NULL 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 602))
(ENSURE-METHOD 'ENSURE-CLASS-USING-CLASS :LAMBDA-LIST '(CLASS NAME &REST ALL-KEYS 
&KEY &ALLOW-OTHER-KEYS) :QUALIFIERS 'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS 
(LIST 'BUILT-IN-CLASS 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 604))
(ENSURE-METHOD 'ENSURE-CLASS-USING-CLASS :LAMBDA-LIST '(CLASS NAME &REST ALL-KEYS 
&KEY (METACLASS +THE-STANDARD-CLASS+) DIRECT-SUPERCLASSES &ALLOW-OTHER-KEYS) :QUALIFIERS 
'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'FORWARD-REFERENCED-CLASS 'T)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 606))
(ENSURE-METHOD 'ENSURE-CLASS-USING-CLASS :LAMBDA-LIST '(CLASS NAME &REST ALL-KEYS 
&KEY (METACLASS +THE-STANDARD-CLASS+ METACLASSP) DIRECT-SUPERCLASSES &ALLOW-OTHER-KEYS) 
:QUALIFIERS 'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'CLASS 'T)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 608))
(FSET 'DEFCLASS (MAKE-MACRO 'DEFCLASS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 610)) 
148529 '(&WHOLE FORM NAME DIRECT-SUPERCLASSES DIRECT-SLOTS &REST OPTIONS))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 611))
(ENSURE-METHOD 'DIRECT-SLOT-DEFINITION-CLASS :LAMBDA-LIST '(CLASS &REST INITARGS) 
:QUALIFIERS 'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'CLASS)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 612))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 614))
(ENSURE-METHOD 'EFFECTIVE-SLOT-DEFINITION-CLASS :LAMBDA-LIST '(CLASS &REST INITARGS) 
:QUALIFIERS 'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'CLASS)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 615))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 617))
(ENSURE-METHOD 'READER-METHOD-CLASS :LAMBDA-LIST '(CLASS DIRECT-SLOT &REST INITARGS) 
:QUALIFIERS 'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'STANDARD-CLASS 'STANDARD-DIRECT-SLOT-DEFINITION)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 618))
(ENSURE-METHOD 'READER-METHOD-CLASS :LAMBDA-LIST '(CLASS DIRECT-SLOT &REST INITARGS) 
:QUALIFIERS 'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'FUNCALLABLE-STANDARD-CLASS 
'STANDARD-DIRECT-SLOT-DEFINITION)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
620))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 622))
(ENSURE-METHOD 'WRITER-METHOD-CLASS :LAMBDA-LIST '(CLASS DIRECT-SLOT &REST INITARGS) 
:QUALIFIERS 'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'STANDARD-CLASS 'STANDARD-DIRECT-SLOT-DEFINITION)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 623))
(ENSURE-METHOD 'WRITER-METHOD-CLASS :LAMBDA-LIST '(CLASS DIRECT-SLOT &REST INITARGS) 
:QUALIFIERS 'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'FUNCALLABLE-STANDARD-CLASS 
'STANDARD-DIRECT-SLOT-DEFINITION)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
625))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 627))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 630))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 631))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 634))
(ENSURE-METHOD 'SLOT-VALUE-USING-CLASS :LAMBDA-LIST '(CLASS INSTANCE SLOT) :QUALIFIERS 
'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'STANDARD-CLASS 'T 'SYMBOL)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 635))
(ENSURE-METHOD 'SLOT-VALUE-USING-CLASS :LAMBDA-LIST '(CLASS INSTANCE SLOT) :QUALIFIERS 
'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'STANDARD-CLASS 'T 'STANDARD-EFFECTIVE-SLOT-DEFINITION)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 636))
(ENSURE-METHOD 'SLOT-VALUE-USING-CLASS :LAMBDA-LIST '(CLASS INSTANCE SLOT) :QUALIFIERS 
'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'FUNCALLABLE-STANDARD-CLASS 'T 
'SYMBOL)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 637))
(ENSURE-METHOD 'SLOT-VALUE-USING-CLASS :LAMBDA-LIST '(CLASS INSTANCE SLOT) :QUALIFIERS 
'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'FUNCALLABLE-STANDARD-CLASS 'T 
'STANDARD-EFFECTIVE-SLOT-DEFINITION)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
638))
(ENSURE-METHOD 'SLOT-VALUE-USING-CLASS :LAMBDA-LIST '(CLASS INSTANCE SLOT) :QUALIFIERS 
'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'STRUCTURE-CLASS 'T 'SYMBOL)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 639))
(ENSURE-METHOD 'SLOT-VALUE-USING-CLASS :LAMBDA-LIST '(CLASS INSTANCE SLOT) :QUALIFIERS 
'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'STRUCTURE-CLASS 'T 'STANDARD-EFFECTIVE-SLOT-DEFINITION)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 640))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 641))
(ENSURE-METHOD '(SETF SLOT-VALUE-USING-CLASS) :LAMBDA-LIST '(NEW-VALUE CLASS INSTANCE 
SLOT) :QUALIFIERS 'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'T 'STANDARD-CLASS 
'T 'SYMBOL)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 642))
(ENSURE-METHOD '(SETF SLOT-VALUE-USING-CLASS) :LAMBDA-LIST '(NEW-VALUE CLASS INSTANCE 
SLOT) :QUALIFIERS 'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'T 'STANDARD-CLASS 
'T 'STANDARD-EFFECTIVE-SLOT-DEFINITION)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
644))
(ENSURE-METHOD '(SETF SLOT-VALUE-USING-CLASS) :LAMBDA-LIST '(NEW-VALUE CLASS INSTANCE 
SLOT) :QUALIFIERS 'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'T 'FUNCALLABLE-STANDARD-CLASS 
'T 'SYMBOL)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 646))
(ENSURE-METHOD '(SETF SLOT-VALUE-USING-CLASS) :LAMBDA-LIST '(NEW-VALUE CLASS INSTANCE 
SLOT) :QUALIFIERS 'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'T 'FUNCALLABLE-STANDARD-CLASS 
'T 'STANDARD-EFFECTIVE-SLOT-DEFINITION)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
648))
(ENSURE-METHOD '(SETF SLOT-VALUE-USING-CLASS) :LAMBDA-LIST '(NEW-VALUE CLASS INSTANCE 
SLOT) :QUALIFIERS 'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'T 'STRUCTURE-CLASS 
'T 'SYMBOL)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 650))
(ENSURE-METHOD '(SETF SLOT-VALUE-USING-CLASS) :LAMBDA-LIST '(NEW-VALUE CLASS INSTANCE 
SLOT) :QUALIFIERS 'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'T 'STRUCTURE-CLASS 
'T 'STANDARD-EFFECTIVE-SLOT-DEFINITION)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
652))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 654))
(ENSURE-METHOD 'SLOT-EXISTS-P-USING-CLASS :LAMBDA-LIST '(CLASS INSTANCE SLOT-NAME) 
:QUALIFIERS 'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'T 'T 'T)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 655))
(ENSURE-METHOD 'SLOT-EXISTS-P-USING-CLASS :LAMBDA-LIST '(CLASS INSTANCE SLOT-NAME) 
:QUALIFIERS 'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'STANDARD-CLASS 'T 
'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 656))
(ENSURE-METHOD 'SLOT-EXISTS-P-USING-CLASS :LAMBDA-LIST '(CLASS INSTANCE SLOT-NAME) 
:QUALIFIERS 'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'FUNCALLABLE-STANDARD-CLASS 
'T 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 657))
(ENSURE-METHOD 'SLOT-EXISTS-P-USING-CLASS :LAMBDA-LIST '(CLASS INSTANCE SLOT-NAME) 
:QUALIFIERS 'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'STRUCTURE-CLASS 
'T 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 658))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 659))
(ENSURE-METHOD 'SLOT-BOUNDP-USING-CLASS :LAMBDA-LIST '(CLASS INSTANCE SLOT) :QUALIFIERS 
'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'STANDARD-CLASS 'T 'SYMBOL)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 660))
(ENSURE-METHOD 'SLOT-BOUNDP-USING-CLASS :LAMBDA-LIST '(CLASS INSTANCE SLOT) :QUALIFIERS 
'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'STANDARD-CLASS 'T 'STANDARD-EFFECTIVE-SLOT-DEFINITION)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 661))
(ENSURE-METHOD 'SLOT-BOUNDP-USING-CLASS :LAMBDA-LIST '(CLASS INSTANCE SLOT) :QUALIFIERS 
'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'FUNCALLABLE-STANDARD-CLASS 'T 
'SYMBOL)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 662))
(ENSURE-METHOD 'SLOT-BOUNDP-USING-CLASS :LAMBDA-LIST '(CLASS INSTANCE SLOT) :QUALIFIERS 
'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'FUNCALLABLE-STANDARD-CLASS 'T 
'STANDARD-EFFECTIVE-SLOT-DEFINITION)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
663))
(ENSURE-METHOD 'SLOT-BOUNDP-USING-CLASS :LAMBDA-LIST '(CLASS INSTANCE SLOT) :QUALIFIERS 
'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'STRUCTURE-CLASS 'T 'T)) :DOCUMENTATION 
"Structure slots can't be unbound, so this method always returns T." :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 664))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 665))
(ENSURE-METHOD 'SLOT-MAKUNBOUND-USING-CLASS :LAMBDA-LIST '(CLASS INSTANCE SLOT) :QUALIFIERS 
'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'STANDARD-CLASS 'T 'SYMBOL)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 666))
(ENSURE-METHOD 'SLOT-MAKUNBOUND-USING-CLASS :LAMBDA-LIST '(CLASS INSTANCE SLOT) :QUALIFIERS 
'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'STANDARD-CLASS 'T 'STANDARD-EFFECTIVE-SLOT-DEFINITION)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 667))
(ENSURE-METHOD 'SLOT-MAKUNBOUND-USING-CLASS :LAMBDA-LIST '(CLASS INSTANCE SLOT) :QUALIFIERS 
'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'FUNCALLABLE-STANDARD-CLASS 'T 
'SYMBOL)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 668))
(ENSURE-METHOD 'SLOT-MAKUNBOUND-USING-CLASS :LAMBDA-LIST '(CLASS INSTANCE SLOT) :QUALIFIERS 
'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'FUNCALLABLE-STANDARD-CLASS 'T 
'SYMBOL)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 669))
(ENSURE-METHOD 'SLOT-MAKUNBOUND-USING-CLASS :LAMBDA-LIST '(CLASS INSTANCE SLOT) :QUALIFIERS 
'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'STRUCTURE-CLASS 'T 'T)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 670))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 671))
(ENSURE-METHOD 'SLOT-MISSING :LAMBDA-LIST '(CLASS INSTANCE SLOT-NAME OPERATION &OPTIONAL 
NEW-VALUE) :QUALIFIERS 'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'T 'T 
'T 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 672))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 674))
(ENSURE-METHOD 'SLOT-UNBOUND :LAMBDA-LIST '(CLASS INSTANCE SLOT-NAME) :QUALIFIERS 
'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'T 'T 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 675))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 676))
(ENSURE-METHOD 'ALLOCATE-INSTANCE :LAMBDA-LIST '(CLASS &REST INITARGS) :QUALIFIERS 
'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'STANDARD-CLASS)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 677))
(ENSURE-METHOD 'ALLOCATE-INSTANCE :LAMBDA-LIST '(CLASS &REST INITARGS) :QUALIFIERS 
'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'FUNCALLABLE-STANDARD-CLASS)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 679))
(ENSURE-METHOD 'ALLOCATE-INSTANCE :LAMBDA-LIST '(CLASS &REST INITARGS) :QUALIFIERS 
'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'STRUCTURE-CLASS)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 681))
(ENSURE-METHOD 'ALLOCATE-INSTANCE :LAMBDA-LIST '(CLASS &REST INITARGS) :QUALIFIERS 
'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'BUILT-IN-CLASS)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 683))
(ENSURE-METHOD 'ALLOCATE-INSTANCE :LAMBDA-LIST '(CLASS &REST INITARGS) :QUALIFIERS 
'(:BEFORE) :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'CLASS)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 685))
(FSET 'CALCULATE-ALLOWABLE-INITARGS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 687) 
161088 '(GF-LIST ARGS INSTANCE SHARED-INITIALIZE-PARAM INITARGS) NIL)
(FSET 'CHECK-INITARGS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 689) 162545 '(GF-LIST 
ARGS INSTANCE SHARED-INITIALIZE-PARAM INITARGS CACHE CALL-SITE) "Checks the validity of `initargs' for the generic functions in `gf-list'
when called with `args' by calculating the applicable methods for each gf.
The applicable methods for SHARED-INITIALIZE based on `instance',
`shared-initialize-param' and `initargs' are added to the list of
applicable methods.")
(FSET 'MERGE-INITARGS-SETS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 690) 164096 '(LIST1 
LIST2) NIL)
(FSET 'EXTRACT-LAMBDA-LIST-KEYWORDS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 691) 
164229 '(LAMBDA-LIST) "Returns a list of keywords acceptable as keyword arguments,
or T when any keyword is acceptable due to presence of
&allow-other-keys.")
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 692))
(ENSURE-METHOD 'MAKE-INSTANCE :LAMBDA-LIST '(CLASS &REST INITARGS) :QUALIFIERS '(:BEFORE) 
:SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'CLASS)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 693))
(FSET 'AUGMENT-INITARGS-WITH-DEFAULTS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 695) 
165183 '(CLASS INITARGS) NIL)
(ENSURE-METHOD 'MAKE-INSTANCE :LAMBDA-LIST '(CLASS &REST INITARGS) :QUALIFIERS 'NIL 
:SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'STANDARD-CLASS)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 696))
(ENSURE-METHOD 'MAKE-INSTANCE :LAMBDA-LIST '(CLASS &REST INITARGS) :QUALIFIERS 'NIL 
:SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'FUNCALLABLE-STANDARD-CLASS)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 698))
(ENSURE-METHOD 'MAKE-INSTANCE :LAMBDA-LIST '(CLASS &REST INITARGS) :QUALIFIERS 'NIL 
:SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'SYMBOL)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 700))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 702))
(ENSURE-METHOD 'INITIALIZE-INSTANCE :LAMBDA-LIST '(INSTANCE &REST INITARGS) :QUALIFIERS 
'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'STANDARD-OBJECT)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 703))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 705))
(ENSURE-METHOD 'REINITIALIZE-INSTANCE :LAMBDA-LIST '(INSTANCE &REST INITARGS) :QUALIFIERS 
'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'STANDARD-OBJECT)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 706))
(FSET 'STD-SHARED-INITIALIZE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 708) 167788 
'(INSTANCE SLOT-NAMES ALL-KEYS) NIL)
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 709))
(ENSURE-METHOD 'SHARED-INITIALIZE :LAMBDA-LIST '(INSTANCE SLOT-NAMES &REST INITARGS) 
:QUALIFIERS 'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'STANDARD-OBJECT 
'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 710))
(ENSURE-METHOD 'SHARED-INITIALIZE :LAMBDA-LIST '(SLOT SLOT-NAMES &REST ARGS &KEY 
NAME INITARGS INITFORM INITFUNCTION READERS WRITERS ALLOCATION &ALLOW-OTHER-KEYS) 
:QUALIFIERS 'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'SLOT-DEFINITION 
'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 712))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 716))
(ENSURE-METHOD 'CHANGE-CLASS :LAMBDA-LIST '(OLD-INSTANCE NEW-CLASS &REST INITARGS) 
:QUALIFIERS 'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'STANDARD-OBJECT 
'STANDARD-CLASS)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 717))
(ENSURE-METHOD 'CHANGE-CLASS :LAMBDA-LIST '(INSTANCE NEW-CLASS &REST INITARGS) :QUALIFIERS 
'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'STANDARD-OBJECT 'SYMBOL)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 719))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 721))
(ENSURE-METHOD 'UPDATE-INSTANCE-FOR-DIFFERENT-CLASS :LAMBDA-LIST '(OLD NEW &REST 
INITARGS) :QUALIFIERS 'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'STANDARD-OBJECT 
'STANDARD-OBJECT)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 722))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 725))
(ENSURE-METHOD 'MAKE-INSTANCES-OBSOLETE :LAMBDA-LIST '(CLASS) :QUALIFIERS 'NIL :SPECIALIZERS 
(CANONICALIZE-SPECIALIZERS (LIST 'STANDARD-CLASS)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 726) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 727))
(ENSURE-METHOD 'MAKE-INSTANCES-OBSOLETE :LAMBDA-LIST '(CLASS) :QUALIFIERS 'NIL :SPECIALIZERS 
(CANONICALIZE-SPECIALIZERS (LIST 'FUNCALLABLE-STANDARD-CLASS)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 728) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 729))
(ENSURE-METHOD 'MAKE-INSTANCES-OBSOLETE :LAMBDA-LIST '(CLASS) :QUALIFIERS 'NIL :SPECIALIZERS 
(CANONICALIZE-SPECIALIZERS (LIST 'SYMBOL)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
730) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 731))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 732))
(ENSURE-METHOD 'UPDATE-INSTANCE-FOR-REDEFINED-CLASS :LAMBDA-LIST '(INSTANCE ADDED-SLOTS 
DISCARDED-SLOTS PROPERTY-LIST &REST INITARGS) :QUALIFIERS 'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS 
(LIST 'STANDARD-OBJECT 'T 'T 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
733))
(ENSURE-METHOD 'INITIALIZE-INSTANCE :LAMBDA-LIST '(CLASS &REST ARGS) :QUALIFIERS 
'(:AFTER) :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'STANDARD-CLASS)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 735))
(ENSURE-METHOD 'INITIALIZE-INSTANCE :LAMBDA-LIST '(CLASS &REST ARGS) :QUALIFIERS 
'(:AFTER) :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'FUNCALLABLE-STANDARD-CLASS)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 737))
(ENSURE-METHOD 'REINITIALIZE-INSTANCE :LAMBDA-LIST '(CLASS &REST ALL-KEYS &KEY DIRECT-SUPERCLASSES) 
:QUALIFIERS '(:BEFORE) :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'STANDARD-CLASS)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 739))
(ENSURE-METHOD 'REINITIALIZE-INSTANCE :LAMBDA-LIST '(CLASS &REST ALL-KEYS &KEY DIRECT-SUPERCLASSES) 
:QUALIFIERS '(:BEFORE) :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'FUNCALLABLE-STANDARD-CLASS)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 741))
(FSET 'STD-AFTER-REINITIALIZATION-FOR-CLASSES (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
743) 175618 '(CLASS &REST ALL-KEYS &KEY (DIRECT-SUPERCLASSES NIL DIRECT-SUPERCLASSES-P) 
(DIRECT-SLOTS NIL DIRECT-SLOTS-P) (DIRECT-DEFAULT-INITARGS NIL DIRECT-DEFAULT-INITARGS-P) 
&ALLOW-OTHER-KEYS) NIL)
(ENSURE-METHOD 'REINITIALIZE-INSTANCE :LAMBDA-LIST '(CLASS &REST ALL-KEYS) :QUALIFIERS 
'(:AFTER) :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'STANDARD-CLASS)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 746))
(ENSURE-METHOD 'REINITIALIZE-INSTANCE :LAMBDA-LIST '(CLASS &REST ALL-KEYS) :QUALIFIERS 
'(:AFTER) :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'FUNCALLABLE-STANDARD-CLASS)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 748))
(ENSURE-METHOD 'REINITIALIZE-INSTANCE :LAMBDA-LIST '(GF &KEY (LAMBDA-LIST NIL LAMBDA-LIST-SUPPLIED-P) 
&ALLOW-OTHER-KEYS) :QUALIFIERS '(:BEFORE) :SPECIALIZERS (CANONICALIZE-SPECIALIZERS 
(LIST 'STANDARD-GENERIC-FUNCTION)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
750))
(ENSURE-METHOD 'REINITIALIZE-INSTANCE :LAMBDA-LIST '(GF &REST ALL-KEYS) :QUALIFIERS 
'(:AFTER) :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'STANDARD-GENERIC-FUNCTION)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 752))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 755))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 760))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 761))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 766))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 767))
(ENSURE-METHOD 'COMPUTE-CLASS-PRECEDENCE-LIST :LAMBDA-LIST '(CLASS) :QUALIFIERS 'NIL 
:SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'STANDARD-CLASS)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 768) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 769))
(ENSURE-METHOD 'COMPUTE-CLASS-PRECEDENCE-LIST :LAMBDA-LIST '(CLASS) :QUALIFIERS 'NIL 
:SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'FUNCALLABLE-STANDARD-CLASS)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 770) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 771))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 772))
(ENSURE-METHOD 'COMPUTE-SLOTS :LAMBDA-LIST '(CLASS) :QUALIFIERS 'NIL :SPECIALIZERS 
(CANONICALIZE-SPECIALIZERS (LIST 'STANDARD-CLASS)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 773) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 774))
(ENSURE-METHOD 'COMPUTE-SLOTS :LAMBDA-LIST '(CLASS) :QUALIFIERS 'NIL :SPECIALIZERS 
(CANONICALIZE-SPECIALIZERS (LIST 'FUNCALLABLE-STANDARD-CLASS)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 775) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 776))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 777))
(ENSURE-METHOD 'COMPUTE-EFFECTIVE-SLOT-DEFINITION :LAMBDA-LIST '(CLASS NAME DIRECT-SLOTS) 
:QUALIFIERS 'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'STANDARD-CLASS 'T 
'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 778))
(ENSURE-METHOD 'COMPUTE-EFFECTIVE-SLOT-DEFINITION :LAMBDA-LIST '(CLASS NAME DIRECT-SLOTS) 
:QUALIFIERS 'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'FUNCALLABLE-STANDARD-CLASS 
'T 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 779))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 780))
(ENSURE-METHOD 'COMPUTE-DISCRIMINATING-FUNCTION :LAMBDA-LIST '(GF) :QUALIFIERS 'NIL 
:SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'STANDARD-GENERIC-FUNCTION)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 781) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 782))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 783))
(ENSURE-METHOD 'METHOD-MORE-SPECIFIC-P :LAMBDA-LIST '(GF METHOD1 METHOD2 REQUIRED-CLASSES) 
:QUALIFIERS 'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'STANDARD-GENERIC-FUNCTION 
'T 'T 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 784))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 786))
(ENSURE-METHOD 'COMPUTE-EFFECTIVE-METHOD :LAMBDA-LIST '(GF METHOD-COMBINATION METHODS) 
:QUALIFIERS 'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'STANDARD-GENERIC-FUNCTION 
'T 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 787))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 788))
(ENSURE-METHOD 'COMPUTE-APPLICABLE-METHODS :LAMBDA-LIST '(GF ARGS) :QUALIFIERS 'NIL 
:SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'STANDARD-GENERIC-FUNCTION 'T)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 789) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 790))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 791))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 794))
(FSET 'SLOT-DEFINITION-DISPATCH (MAKE-MACRO 'SLOT-DEFINITION-DISPATCH (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 795)) 181753 '(SLOT-DEFINITION STD-FORM GENERIC-FORM))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 796))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 799))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 800))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 803))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 804))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 807))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 808))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 811))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 812))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 815))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 816))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 819))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 820))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 823))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 824))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 827))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 828))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 831))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 832))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 835))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 836))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 839))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 840))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 843))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 844))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 847))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 848))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 851))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 852))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 855))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 856))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 859))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 860))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 863))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 864))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 867))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 868))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 871))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 872))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 875))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 876))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 879))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 880))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 883))
(FSET 'DEFINE-CONDITION (MAKE-MACRO 'DEFINE-CONDITION (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 884)) 188481 '(NAME (&REST PARENT-TYPES) (&REST SLOT-SPECS) &BODY OPTIONS))
(FSET 'MAKE-CONDITION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 885) 189565 '(TYPE 
&REST INITARGS) NIL)
(FSET 'COERCE-TO-CONDITION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 886) 189762 '(DATUM 
ARGUMENTS DEFAULT-TYPE FUN-NAME) NIL)
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 887))
(ENSURE-METHOD 'MAKE-LOAD-FORM :LAMBDA-LIST '(OBJECT &OPTIONAL ENVIRONMENT) :QUALIFIERS 
'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 888))
(ENSURE-METHOD 'MAKE-LOAD-FORM :LAMBDA-LIST '(CLASS &OPTIONAL ENVIRONMENT) :QUALIFIERS 
'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'CLASS)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 890))
(FSET 'INVALID-METHOD-ERROR (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 892) 191393 
'(METHOD FORMAT-CONTROL &REST ARGS) NIL)
(FSET 'METHOD-COMBINATION-ERROR (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 893) 191585 
'(FORMAT-CONTROL &REST ARGS) NIL)
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 894))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 897))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 898))
(ENSURE-METHOD 'FIND-METHOD :LAMBDA-LIST '(GENERIC-FUNCTION QUALIFIERS SPECIALIZERS 
&OPTIONAL (ERRORP T)) :QUALIFIERS 'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 
'STANDARD-GENERIC-FUNCTION 'T 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
899))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 901))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 902))
(ENSURE-METHOD 'ADD-METHOD :LAMBDA-LIST '(GENERIC-FUNCTION METHOD) :QUALIFIERS '(:BEFORE) 
:SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'GENERIC-FUNCTION 'METHOD)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 903) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 904))
(ENSURE-METHOD 'ADD-METHOD :LAMBDA-LIST '(GENERIC-FUNCTION METHOD) :QUALIFIERS 'NIL 
:SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'STANDARD-GENERIC-FUNCTION 'STANDARD-METHOD)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 905) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 906))
(ENSURE-METHOD 'ADD-METHOD :LAMBDA-LIST '(GENERIC-FUNCTION METHOD) :QUALIFIERS '(:AFTER) 
:SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'GENERIC-FUNCTION 'METHOD)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 907) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 909))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 911))
(ENSURE-METHOD 'REMOVE-METHOD :LAMBDA-LIST '(GENERIC-FUNCTION METHOD) :QUALIFIERS 
'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'STANDARD-GENERIC-FUNCTION 'STANDARD-METHOD)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 912) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 913))
(ENSURE-METHOD 'REMOVE-METHOD :LAMBDA-LIST '(GENERIC-FUNCTION METHOD) :QUALIFIERS 
'(:AFTER) :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'GENERIC-FUNCTION 'METHOD)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 914) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 916))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 918))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 919))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 920))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 923))
(SETQ *GF-INITIALIZE-INSTANCE* (SYMBOL-FUNCTION 'INITIALIZE-INSTANCE))
(SETQ *GF-ALLOCATE-INSTANCE* (SYMBOL-FUNCTION 'ALLOCATE-INSTANCE))
(SETQ *GF-SHARED-INITIALIZE* (SYMBOL-FUNCTION 'SHARED-INITIALIZE))
(SETQ *GF-REINITIALIZE-INSTANCE* (SYMBOL-FUNCTION 'REINITIALIZE-INSTANCE))
(SETQ *CLOS-BOOTING* NIL)
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 924))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 933))
(ENSURE-METHOD 'SHARED-INITIALIZE :LAMBDA-LIST '(INSTANCE SLOT-NAMES &KEY LAMBDA-LIST 
ARGUMENT-PRECEDENCE-ORDER &ALLOW-OTHER-KEYS) :QUALIFIERS '(:BEFORE) :SPECIALIZERS 
(CANONICALIZE-SPECIALIZERS (LIST 'GENERIC-FUNCTION 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 934))
(ENSURE-METHOD 'SHARED-INITIALIZE :LAMBDA-LIST '(INSTANCE SLOT-NAMES &KEY LAMBDA-LIST 
ARGUMENT-PRECEDENCE-ORDER (METHOD-COMBINATION '(STANDARD)) &ALLOW-OTHER-KEYS) :QUALIFIERS 
'(:AFTER) :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'STANDARD-GENERIC-FUNCTION 
'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 936))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 938))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 941))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 942))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 945))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 946))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 949))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 950))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 953))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 954))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 957))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 958))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 961))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 962))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 965))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 966))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 969))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 970))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 973))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 974))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 977))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 980))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 981))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 984))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 985))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 988))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 989))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 992))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 993))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 996))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 997))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 1000))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 1001))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 1003))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 1004))
(ENSURE-METHOD 'SPECIALIZER-DIRECT-GENERIC-FUNCTIONS :LAMBDA-LIST '(SPECIALIZER) 
:QUALIFIERS 'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'CLASS)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 1005) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 1006))
(ENSURE-METHOD 'SPECIALIZER-DIRECT-GENERIC-FUNCTIONS :LAMBDA-LIST '(SPECIALIZER) 
:QUALIFIERS 'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'EQL-SPECIALIZER)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 1007) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 1008))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 1009))
(ENSURE-METHOD 'SPECIALIZER-DIRECT-METHODS :LAMBDA-LIST '(SPECIALIZER) :QUALIFIERS 
'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'CLASS)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 1010) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 1011))
(ENSURE-METHOD 'SPECIALIZER-DIRECT-METHODS :LAMBDA-LIST '(SPECIALIZER) :QUALIFIERS 
'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'EQL-SPECIALIZER)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 1012) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 1013))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 1014))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 1019))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 1020))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 1025))
(DEFVAR *DEPENDENTS* (MAKE-HASH-TABLE :TEST 'EQ :WEAKNESS :KEY))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 1026))
(ENSURE-METHOD 'ADD-DEPENDENT :LAMBDA-LIST '(METAOBJECT DEPENDENT) :QUALIFIERS 'NIL 
:SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'STANDARD-CLASS 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 1027) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 1028))
(ENSURE-METHOD 'ADD-DEPENDENT :LAMBDA-LIST '(METAOBJECT DEPENDENT) :QUALIFIERS 'NIL 
:SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'FUNCALLABLE-STANDARD-CLASS 'T)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 1029) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 1030))
(ENSURE-METHOD 'ADD-DEPENDENT :LAMBDA-LIST '(METAOBJECT DEPENDENT) :QUALIFIERS 'NIL 
:SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'STANDARD-GENERIC-FUNCTION 'T)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 1031) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 1032))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 1033))
(ENSURE-METHOD 'REMOVE-DEPENDENT :LAMBDA-LIST '(METAOBJECT DEPENDENT) :QUALIFIERS 
'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'STANDARD-CLASS 'T)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 1034) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 1035))
(ENSURE-METHOD 'REMOVE-DEPENDENT :LAMBDA-LIST '(METAOBJECT DEPENDENT) :QUALIFIERS 
'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'FUNCALLABLE-STANDARD-CLASS 'T)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 1036) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 1037))
(ENSURE-METHOD 'REMOVE-DEPENDENT :LAMBDA-LIST '(METAOBJECT DEPENDENT) :QUALIFIERS 
'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'STANDARD-GENERIC-FUNCTION 'T)) 
:FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 1038) :FAST-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 1039))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 1040))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 1047))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 1048))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 1049))
(ENSURE-METHOD 'ENSURE-GENERIC-FUNCTION-USING-CLASS :LAMBDA-LIST '(GENERIC-FUNCTION 
FUNCTION-NAME &REST ALL-KEYS &KEY (GENERIC-FUNCTION-CLASS (CLASS-OF GENERIC-FUNCTION)) 
(METHOD-CLASS (GENERIC-FUNCTION-METHOD-CLASS GENERIC-FUNCTION)) (METHOD-COMBINATION 
(GENERIC-FUNCTION-METHOD-COMBINATION GENERIC-FUNCTION)) &ALLOW-OTHER-KEYS) :QUALIFIERS 
'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 'GENERIC-FUNCTION 'T)) :FUNCTION 
(SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 1050))
(ENSURE-METHOD 'ENSURE-GENERIC-FUNCTION-USING-CLASS :LAMBDA-LIST '(GENERIC-FUNCTION 
FUNCTION-NAME &REST ALL-KEYS &KEY (GENERIC-FUNCTION-CLASS +THE-STANDARD-GENERIC-FUNCTION-CLASS+) 
&ALLOW-OTHER-KEYS) :QUALIFIERS 'NIL :SPECIALIZERS (CANONICALIZE-SPECIALIZERS (LIST 
'NULL 'T)) :FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 1052))
(FSET 'ENSURE-GENERIC-FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 1054) 206937 
'(FUNCTION-NAME &REST ALL-KEYS &KEY LAMBDA-LIST GENERIC-FUNCTION-CLASS METHOD-CLASS 
METHOD-COMBINATION ARGUMENT-PRECEDENCE-ORDER DECLARATIONS DOCUMENTATION &ALLOW-OTHER-KEYS) 
NIL)
(FSET '%METHOD-GENERIC-FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 1055) 207722 
'(METHOD) NIL)
(FSET '%METHOD-FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 1056) 207836 '(METHOD) 
NIL)
(REQUIRE "MOP")
(PROVIDE "CLOS")
