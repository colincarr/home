"; -*- Mode: Lisp -*-"
(SYSTEM:INIT-FASL :VERSION 42)
(SETQ SYSTEM:*SOURCE* #P"/Users/cpc26/src/abcl/src/org/armedbear/lisp/compiler-pass2.lisp")
(SETQ SYSTEM::*FASL-UNINTERNED-SYMBOLS* #(#:WHOLE-93105 #:ENVIRONMENT-93106 #:WHOLE-93162 #:ENVIRONMENT-93163 #:WHOLE-95423 #:ENVIRONMENT-95424 #:WHOLE-98057 #:ENVIRONMENT-98058 #:G100009 #:G100078 #:G100171 #:WHOLE-101361 #:ENVIRONMENT-101362 #:WHOLE-110359 #:ENVIRONMENT-110360 #:WHOLE-111090 #:ENVIRONMENT-111091 #:G116113 #:G116195 #:G116281 #:WHOLE-117310 #:ENVIRONMENT-117311 #:WHOLE-119583 #:ENVIRONMENT-119584 #:WHOLE-120794 #:ENVIRONMENT-120795))
(SETQ SYSTEM:*FASL-LOADER* (SYSTEM::MAKE-FASL-CLASS-LOADER "org.armedbear.lisp.compiler_pass2"))
(SYSTEM:%IN-PACKAGE "JVM")
(REQUIRE "LOOP")
(REQUIRE "FORMAT")
(REQUIRE "CLOS")
(REQUIRE "PRINT-OBJECT")
(REQUIRE "COMPILER-TYPES")
(REQUIRE "KNOWN-FUNCTIONS")
(REQUIRE "KNOWN-SYMBOLS")
(REQUIRE "DUMP-FORM")
(REQUIRE "JVM-INSTRUCTIONS")
(REQUIRE "JVM-CLASS-FILE")
(REQUIRE "JVM")
(REQUIRE "COMPILER-PASS1")
(REQUIRE "JAVA")
(PROCLAIM '(INLINE POOL-NAME POOL-STRING POOL-NAME-AND-TYPE POOL-CLASS POOL-FIELD 
POOL-METHOD POOL-INT POOL-FLOAT POOL-LONG POOL-DOUBLE))
(PROCLAIM '(SPECIAL *MEMORY-CLASS-LOADER*))
(PROCLAIM '(INLINE POOL-NAME POOL-NAME-AND-TYPE POOL-STRING POOL-FIELD POOL-METHOD 
POOL-INT POOL-FLOAT POOL-LONG POOL-DOUBLE ADD-EXCEPTION-HANDLER))
(SETF (INLINE-EXPANSION 'POOL-NAME) '(LAMBDA (NAME) (BLOCK POOL-NAME (POOL-ADD-UTF8 
*POOL* NAME))))
(FSET 'POOL-NAME (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 0) 2473 '(NAME) NIL)
(SETF (INLINE-EXPANSION 'POOL-NAME-AND-TYPE) '(LAMBDA (NAME TYPE) (BLOCK POOL-NAME-AND-TYPE 
(POOL-ADD-NAME/TYPE *POOL* NAME TYPE))))
(FSET 'POOL-NAME-AND-TYPE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 1) 2528 '(NAME 
TYPE) NIL)
(SETF (INLINE-EXPANSION 'POOL-CLASS) '(LAMBDA (NAME) (BLOCK POOL-CLASS (POOL-ADD-CLASS 
*POOL* NAME))))
(FSET 'POOL-CLASS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 2) 2608 '(NAME) NIL)
(SETF (INLINE-EXPANSION 'POOL-STRING) '(LAMBDA (STRING) (BLOCK POOL-STRING (POOL-ADD-STRING 
*POOL* STRING))))
(FSET 'POOL-STRING (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 3) 2666 '(STRING) NIL)
(SETF (INLINE-EXPANSION 'POOL-FIELD) '(LAMBDA (CLASS-NAME FIELD-NAME TYPE-NAME) (BLOCK 
POOL-FIELD (POOL-ADD-FIELD-REF *POOL* CLASS-NAME FIELD-NAME TYPE-NAME))))
(FSET 'POOL-FIELD (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 4) 2730 '(CLASS-NAME FIELD-NAME 
TYPE-NAME) NIL)
(SETF (INLINE-EXPANSION 'POOL-METHOD) '(LAMBDA (CLASS-NAME METHOD-NAME TYPE-NAME) 
(BLOCK POOL-METHOD (POOL-ADD-METHOD-REF *POOL* CLASS-NAME METHOD-NAME TYPE-NAME))))
(FSET 'POOL-METHOD (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 5) 2846 '(CLASS-NAME 
METHOD-NAME TYPE-NAME) NIL)
(SETF (INLINE-EXPANSION 'POOL-INT) '(LAMBDA (INT) (BLOCK POOL-INT (POOL-ADD-INT *POOL* 
INT))))
(FSET 'POOL-INT (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 6) 2966 '(INT) NIL)
(SETF (INLINE-EXPANSION 'POOL-FLOAT) '(LAMBDA (FLOAT) (BLOCK POOL-FLOAT (POOL-ADD-FLOAT 
*POOL* FLOAT))))
(FSET 'POOL-FLOAT (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 7) 3018 '(FLOAT) NIL)
(SETF (INLINE-EXPANSION 'POOL-LONG) '(LAMBDA (LONG) (BLOCK POOL-LONG (POOL-ADD-LONG 
*POOL* LONG))))
(FSET 'POOL-LONG (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 8) 3078 '(LONG) NIL)
(SETF (INLINE-EXPANSION 'POOL-DOUBLE) '(LAMBDA (DOUBLE) (BLOCK POOL-DOUBLE (POOL-ADD-DOUBLE 
*POOL* DOUBLE))))
(FSET 'POOL-DOUBLE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 9) 3134 '(DOUBLE) NIL)
(SETF (INLINE-EXPANSION 'ADD-EXCEPTION-HANDLER) '(LAMBDA (START END HANDLER TYPE) 
(BLOCK ADD-EXCEPTION-HANDLER (CODE-ADD-EXCEPTION-HANDLER *CURRENT-CODE-ATTRIBUTE* 
START END HANDLER TYPE))))
(FSET 'ADD-EXCEPTION-HANDLER (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 10) 3198 '(START 
END HANDLER TYPE) NIL)
(SYSTEM::%DEFKNOWN 'EMIT-PUSH-NIL 'NIL 'T)
(PROCLAIM '(INLINE EMIT-PUSH-NIL))
(SETF (INLINE-EXPANSION 'EMIT-PUSH-NIL) '(LAMBDA NIL (BLOCK EMIT-PUSH-NIL (EMIT-GETSTATIC 
+LISP+ "NIL" +LISP-SYMBOL+))))
(FSET 'EMIT-PUSH-NIL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 11) 3429 'NIL NIL)
(SYSTEM::%DEFKNOWN 'EMIT-PUSH-NIL-SYMBOL 'NIL 'T)
(PROCLAIM '(INLINE EMIT-PUSH-NIL-SYMBOL))
(SETF (INLINE-EXPANSION 'EMIT-PUSH-NIL-SYMBOL) '(LAMBDA NIL (BLOCK EMIT-PUSH-NIL-SYMBOL 
(EMIT-GETSTATIC +LISP-NIL+ "NIL" +LISP-SYMBOL+))))
(FSET 'EMIT-PUSH-NIL-SYMBOL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 12) 3578 'NIL 
NIL)
(SYSTEM::%DEFKNOWN 'EMIT-PUSH-T 'NIL 'T)
(PROCLAIM '(INLINE EMIT-PUSH-T))
(SETF (INLINE-EXPANSION 'EMIT-PUSH-T) '(LAMBDA NIL (BLOCK EMIT-PUSH-T (EMIT-GETSTATIC 
+LISP+ "T" +LISP-SYMBOL+))))
(FSET 'EMIT-PUSH-T (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 13) 3720 'NIL NIL)
(SYSTEM::%DEFKNOWN 'EMIT-PUSH-FALSE '(T) 'T)
(FSET 'EMIT-PUSH-FALSE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 14) 3821 '(REPRESENTATION) 
NIL)
(SYSTEM::%DEFKNOWN 'EMIT-PUSH-TRUE '(T) 'T)
(FSET 'EMIT-PUSH-TRUE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 15) 4030 '(REPRESENTATION) 
NIL)
(SYSTEM::%DEFKNOWN 'EMIT-PUSH-CONSTANT-INT '(FIXNUM) 'T)
(FSET 'EMIT-PUSH-CONSTANT-INT (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 16) 4249 '(N) 
NIL)
(SYSTEM::%DEFKNOWN 'EMIT-PUSH-CONSTANT-LONG '(INTEGER) 'T)
(FSET 'EMIT-PUSH-CONSTANT-LONG (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 17) 4717 
'(N) NIL)
(SYSTEM::%DEFKNOWN 'EMIT-PUSH-CONSTANT-FLOAT '(SINGLE-FLOAT) 'T)
(FSET 'EMIT-PUSH-CONSTANT-FLOAT (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 18) 4910 
'(N) NIL)
(SYSTEM::%DEFKNOWN 'EMIT-PUSH-CONSTANT-DOUBLE '(DOUBLE-FLOAT) 'T)
(FSET 'EMIT-PUSH-CONSTANT-DOUBLE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 19) 5135 
'(N) NIL)
(SYSTEM::%DEFKNOWN 'EMIT-DUP '(SYMBOL) 'T)
(FSET 'EMIT-DUP (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 20) 5313 '(REPRESENTATION 
&KEY (PAST NIL PAST-SUPPLIED-P)) "Emits the 'dup' instruction required to duplicate `representation'.

If `past' is specified, the newly duplicated value is inserted on the
stack past the top-most value, which is assumed to be of the representation
passed in `past'.")
(SYSTEM::%DEFKNOWN 'EMIT-SWAP '(SYMBOL SYMBOL) 'T)
(FSET 'EMIT-SWAP (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 21) 5864 '(REP1 REP2) "Swaps 2 values on the stack,
the top-most value's representation being 'rep1'.")
(PROCLAIM '(FTYPE (FUNCTION * T) EMIT-INVOKESTATIC))
(FSET 'EMIT-INVOKESTATIC (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 22) 6545 '(CLASS-NAME 
METHOD-NAME ARG-TYPES RETURN-TYPE) NIL)
(PROCLAIM '(FTYPE (FUNCTION T STRING) PRETTY-JAVA-CLASS))
(FSET 'PRETTY-JAVA-CLASS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 23) 7001 '(CLASS) 
NIL)
(SYSTEM::%DEFKNOWN 'EMIT-INVOKEVIRTUAL '(T T T T) 'T)
(FSET 'EMIT-INVOKEVIRTUAL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 24) 7283 '(CLASS-NAME 
METHOD-NAME ARG-TYPES RETURN-TYPE) NIL)
(SYSTEM::%DEFKNOWN 'EMIT-INVOKESPECIAL-INIT '(STRING LIST) 'T)
(FSET 'EMIT-INVOKESPECIAL-INIT (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 26) 8164 
'(CLASS-NAME ARG-TYPES) NIL)
(SYSTEM::%DEFKNOWN 'PRETTY-JAVA-TYPE '(T) 'STRING)
(FSET 'PRETTY-JAVA-TYPE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 27) 8623 '(TYPE) 
NIL)
(PROCLAIM '(INLINE EMIT-GETSTATIC EMIT-PUTSTATIC))
(SYSTEM::%DEFKNOWN 'EMIT-GETSTATIC '(T T T) 'T)
(SETF (INLINE-EXPANSION 'EMIT-GETSTATIC) '(LAMBDA (CLASS-NAME FIELD-NAME TYPE) (BLOCK 
EMIT-GETSTATIC (LET ((INDEX (POOL-ADD-FIELD-REF *POOL* CLASS-NAME FIELD-NAME TYPE))) 
(%EMIT 'GETSTATIC INDEX)))))
(FSET 'EMIT-GETSTATIC (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 28) 9631 '(CLASS-NAME 
FIELD-NAME TYPE) NIL)
(SYSTEM::%DEFKNOWN 'EMIT-PUTSTATIC '(T T T) 'T)
(SETF (INLINE-EXPANSION 'EMIT-PUTSTATIC) '(LAMBDA (CLASS-NAME FIELD-NAME TYPE) (BLOCK 
EMIT-PUTSTATIC (LET ((INDEX (POOL-ADD-FIELD-REF *POOL* CLASS-NAME FIELD-NAME TYPE))) 
(%EMIT 'PUTSTATIC INDEX)))))
(FSET 'EMIT-PUTSTATIC (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 29) 9822 '(CLASS-NAME 
FIELD-NAME TYPE) NIL)
(PROCLAIM '(INLINE EMIT-GETFIELD EMIT-PUTFIELD))
(SYSTEM::%DEFKNOWN 'EMIT-GETFIELD '(T T T) 'T)
(SETF (INLINE-EXPANSION 'EMIT-GETFIELD) '(LAMBDA (CLASS-NAME FIELD-NAME TYPE) (BLOCK 
EMIT-GETFIELD (LET* ((INDEX (POOL-ADD-FIELD-REF *POOL* CLASS-NAME FIELD-NAME TYPE))) 
(%EMIT 'GETFIELD INDEX)))))
(FSET 'EMIT-GETFIELD (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 30) 10059 '(CLASS-NAME 
FIELD-NAME TYPE) NIL)
(SYSTEM::%DEFKNOWN 'EMIT-PUTFIELD '(T T T) 'T)
(SETF (INLINE-EXPANSION 'EMIT-PUTFIELD) '(LAMBDA (CLASS-NAME FIELD-NAME TYPE) (BLOCK 
EMIT-PUTFIELD (LET* ((INDEX (POOL-ADD-FIELD-REF *POOL* CLASS-NAME FIELD-NAME TYPE))) 
(%EMIT 'PUTFIELD INDEX)))))
(FSET 'EMIT-PUTFIELD (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 31) 10248 '(CLASS-NAME 
FIELD-NAME TYPE) NIL)
(SYSTEM::%DEFKNOWN 'EMIT-NEW '(T) 'T)
(PROCLAIM '(INLINE EMIT-NEW EMIT-ANEWARRAY EMIT-CHECKCAST EMIT-INSTANCEOF))
(SETF (INLINE-EXPANSION 'EMIT-NEW) '(LAMBDA (CLASS-NAME) (BLOCK EMIT-NEW (%EMIT 'NEW 
(POOL-CLASS CLASS-NAME)))))
(FSET 'EMIT-NEW (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 32) 10503 '(CLASS-NAME) 
NIL)
(SYSTEM::%DEFKNOWN 'EMIT-ANEWARRAY '(T) 'T)
(SETF (INLINE-EXPANSION 'EMIT-ANEWARRAY) '(LAMBDA (CLASS-NAME) (BLOCK EMIT-ANEWARRAY 
(APPLY (FUNCTION %EMIT) 'ANEWARRAY (U2 (POOL-CLASS CLASS-NAME))))))
(FSET 'EMIT-ANEWARRAY (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 33) 10605 '(CLASS-NAME) 
NIL)
(SYSTEM::%DEFKNOWN 'EMIT-CHECKCAST '(T) 'T)
(SETF (INLINE-EXPANSION 'EMIT-CHECKCAST) '(LAMBDA (CLASS-NAME) (BLOCK EMIT-CHECKCAST 
(APPLY (FUNCTION %EMIT) 'CHECKCAST (LIST (POOL-CLASS CLASS-NAME))))))
(FSET 'EMIT-CHECKCAST (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 34) 10732 '(CLASS-NAME) 
NIL)
(SYSTEM::%DEFKNOWN 'EMIT-INSTANCEOF '(T) 'T)
(SETF (INLINE-EXPANSION 'EMIT-INSTANCEOF) '(LAMBDA (CLASS-NAME) (BLOCK EMIT-INSTANCEOF 
(APPLY (FUNCTION %EMIT) 'INSTANCEOF (LIST (POOL-CLASS CLASS-NAME))))))
(FSET 'EMIT-INSTANCEOF (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 35) 10862 '(CLASS-NAME) 
NIL)
(DEFVAR TYPE-REPRESENTATIONS '((:INT FIXNUM) (:LONG (INTEGER -9223372036854775808 
9223372036854775807)) (:FLOAT SINGLE-FLOAT) (:DOUBLE DOUBLE-FLOAT) (:CHAR BASE-CHAR 
CHARACTER) (:BOOLEAN BOOLEAN)) "Lists the widest Lisp types to be stored in each of the Java primitives
supported (and used) by the compiler.")
(FSET 'TYPE-REPRESENTATION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 36) 11519 '(THE-TYPE) 
"Converts a type specification or compiler type into a representation.")
(SYSTEM::%DEFKNOWN 'EMIT-UNBOX-BOOLEAN 'NIL 'T)
(FSET 'EMIT-UNBOX-BOOLEAN (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 37) 12113 'NIL 
NIL)
(SYSTEM::%DEFKNOWN 'EMIT-UNBOX-CHARACTER 'NIL 'T)
(FSET 'EMIT-UNBOX-CHARACTER (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 38) 12303 'NIL 
NIL)
(DEFVAR REP-CONVERSION (SYSTEM::BACKQ-LIST (SYSTEM::BACKQ-CONS NIL (SYSTEM::BACKQ-VECTOR 
(SYSTEM::BACKQ-LIST* (FUNCTION EMIT-UNBOX-BOOLEAN) (FUNCTION EMIT-UNBOX-CHARACTER) 
'("intValue" "longValue" "floatValue" "doubleValue")))) (SYSTEM::BACKQ-CONS ':BOOLEAN 
(SYSTEM::BACKQ-VECTOR '(NIL :ERR :ERR :ERR :ERR :ERR))) (SYSTEM::BACKQ-CONS ':CHAR 
(SYSTEM::BACKQ-VECTOR '(1 NIL :ERR :ERR :ERR :ERR))) (SYSTEM::BACKQ-CONS ':INT (SYSTEM::BACKQ-VECTOR 
'(1 :ERR NIL I2L I2F I2D))) (SYSTEM::BACKQ-CONS ':LONG (SYSTEM::BACKQ-VECTOR '(1 
:ERR L2I NIL L2F L2D))) (SYSTEM::BACKQ-CONS ':FLOAT (SYSTEM::BACKQ-VECTOR '(1 :ERR 
:ERR :ERR NIL F2D))) (SYSTEM::BACKQ-CONS ':DOUBLE (SYSTEM::BACKQ-VECTOR '(1 :ERR 
:ERR :ERR D2F NIL)))) "Contains a table with operations to be performed to do
internal representation conversion.")
(DEFVAR REP-CLASSES (SYSTEM::BACKQ-LIST (SYSTEM::BACKQ-CONS ':BOOLEAN +LISP-OBJECT+) 
(SYSTEM::BACKQ-CONS ':CHAR +LISP-CHARACTER+) (SYSTEM::BACKQ-CONS ':INT +LISP-INTEGER+) 
(SYSTEM::BACKQ-CONS ':LONG +LISP-INTEGER+) (SYSTEM::BACKQ-CONS ':FLOAT +LISP-SINGLE-FLOAT+) 
(SYSTEM::BACKQ-CONS ':DOUBLE +LISP-DOUBLE-FLOAT+)) "Lists the class on which to call the `getInstance' method on,
when converting the internal representation to a LispObject.")
(FSET 'CONVERT-REPRESENTATION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 39) 13902 
'(IN OUT) "Converts the value on the stack in the `in' representation
to a value on the stack in the `out' representation.")
(DEFVAR COMMON-REPRESENTATIONS '((:INT :LONG :LONG) (:INT :FLOAT :DOUBLE) (:INT :DOUBLE 
:DOUBLE) (:FLOAT :INT :DOUBLE) (:FLOAT :DOUBLE :DOUBLE) (:DOUBLE :INT :DOUBLE) (:DOUBLE 
:FLOAT :DOUBLE)) "Representations to convert unequal representations to, in order
to get the correct (exact where required) comparisons.")
(FSET 'COMMON-REPRESENTATION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 40) 15428 '(REP1 
REP2) NIL)
(DEFVAR *THREAD* NIL)
(DEFVAR *INITIALIZE-THREAD-VAR* NIL)
(FSET 'MAYBE-INITIALIZE-THREAD-VAR (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 41) 15945 
'NIL NIL)
(SYSTEM::%DEFKNOWN 'ENSURE-THREAD-VAR-INITIALIZED 'NIL 'T)
(PROCLAIM '(INLINE ENSURE-THREAD-VAR-INITIALIZED))
(SETF (INLINE-EXPANSION 'ENSURE-THREAD-VAR-INITIALIZED) '(LAMBDA NIL (BLOCK ENSURE-THREAD-VAR-INITIALIZED 
(SETF *INITIALIZE-THREAD-VAR* T))))
(FSET 'ENSURE-THREAD-VAR-INITIALIZED (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 42) 
16247 'NIL NIL)
(SYSTEM::%DEFKNOWN 'EMIT-PUSH-CURRENT-THREAD 'NIL 'T)
(FSET 'EMIT-PUSH-CURRENT-THREAD (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 43) 16365 
'NIL NIL)
(FSET 'VARIABLE-LOCAL-P (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 44) 16483 '(VARIABLE) 
"Return non-NIL if `variable' is a local variable.

Special variables are not considered local.")
(FSET 'EMIT-LOAD-LOCAL-VARIABLE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 45) 16715 
'(VARIABLE) "Loads a local variable in the top stack position.")
(FSET 'EMIT-PUSH-VARIABLE-NAME (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 46) 17128 
'(VARIABLE) NIL)
(SYSTEM::%DEFKNOWN 'GENERATE-INSTANCEOF-TYPE-CHECK-FOR-VARIABLE '(T T) 'T)
(FSET 'GENERATE-INSTANCEOF-TYPE-CHECK-FOR-VARIABLE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
47) 17295 '(VARIABLE EXPECTED-TYPE) "Generate a type check for `variable'.

The stack pointer is returned to the position from
before the emitted code: the code is 'stack-neutral'.")
(FSET 'FIND-TYPE-FOR-TYPE-CHECK (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 48) 18867 
'(DECLARED-TYPE) NIL)
(SYSTEM::%DEFKNOWN 'GENERATE-TYPE-CHECK-FOR-VARIABLE '(T) 'T)
(FSET 'GENERATE-TYPE-CHECK-FOR-VARIABLE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
51) 19272 '(VARIABLE) NIL)
(SYSTEM::%DEFKNOWN 'MAYBE-GENERATE-TYPE-CHECK '(T) 'T)
(FSET 'MAYBE-GENERATE-TYPE-CHECK (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 52) 19558 
'(VARIABLE) NIL)
(SYSTEM::%DEFKNOWN 'GENERATE-TYPE-CHECKS-FOR-VARIABLES '(LIST) 'T)
(FSET 'GENERATE-TYPE-CHECKS-FOR-VARIABLES (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
53) 20055 '(VARIABLES) NIL)
(FSET 'GENERATE-ARG-COUNT-CHECK (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 54) 20275 
'(ARITY) NIL)
(FSET 'MAYBE-GENERATE-INTERRUPT-CHECK (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 55) 
20724 'NIL NIL)
(SYSTEM::%DEFKNOWN 'SINGLE-VALUED-P '(T) 'T)
(FSET 'SINGLE-VALUED-P (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 56) 21022 '(FORM) 
NIL)
(SYSTEM::%DEFKNOWN 'EMIT-CLEAR-VALUES 'NIL 'T)
(FSET 'EMIT-CLEAR-VALUES (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 57) 23938 'NIL 
NIL)
(SYSTEM::%DEFKNOWN 'MAYBE-EMIT-CLEAR-VALUES '(&REST T) 'T)
(FSET 'MAYBE-EMIT-CLEAR-VALUES (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 58) 24121 
'(&REST FORMS) NIL)
(FSET 'COMPILE-FORMS-AND-MAYBE-EMIT-CLEAR-VALUES (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
59) 24345 '(&REST FORMS-AND-COMPILE-ARGS) NIL)
(PROCLAIM '(SPECIAL *SAVED-OPERANDS* *OPERAND-REPRESENTATIONS*))
(FSET 'WITH-OPERAND-ACCUMULATION (MAKE-MACRO 'WITH-OPERAND-ACCUMULATION (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 60)) 24731 '((&BODY ARGUMENT-ACCUMULATION-BODY) &BODY CALL-BODY))
(FSET 'ACCUMULATE-OPERAND (MAKE-MACRO 'ACCUMULATE-OPERAND (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 61)) 25599 '((REPRESENTATION &KEY UNSAFE-P) &BODY BODY))
(FSET 'LOAD-SAVED-OPERANDS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 62) 26166 'NIL 
"Load any operands which have been saved into registers
back onto the stack in preparation of the execution of the opcode.")
(FSET 'SAVE-EXISTING-OPERANDS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 63) 26439 
'NIL "If any operands have been compiled to the stack,
save them in registers.")
(FSET 'SAVE-OPERAND (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 64) 26853 '(REPRESENTATION) 
"Saves an operand from the stack (with `representation') to
a register and updates associated operand collection variables.")
(FSET 'COMPILE-OPERAND (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 65) 27246 '(FORM 
REPRESENTATION &OPTIONAL CAST) "Compiles `form' into `representation', storing the resulting value
on the operand stack, if it's safe to do so. Otherwise stores the value
in a register")
(FSET 'EMIT-VARIABLE-OPERAND (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 66) 28032 '(VARIABLE) 
"Pushes a variable onto the operand stack, if it's safe to do so. Otherwise
stores the value in a register.")
(FSET 'EMIT-REGISTER-OPERAND (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 67) 28798 '(REGISTER 
REPRESENTATION) NIL)
(FSET 'EMIT-THREAD-OPERAND (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 68) 29041 'NIL 
NIL)
(FSET 'EMIT-LOAD-EXTERNALIZED-OBJECT-OPERAND (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
69) 29146 '(OBJECT) NIL)
(SYSTEM::%DEFKNOWN 'EMIT-UNBOX-FIXNUM 'NIL 'T)
(FSET 'EMIT-UNBOX-FIXNUM (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 70) 29472 'NIL 
NIL)
(SYSTEM::%DEFKNOWN 'EMIT-UNBOX-LONG 'NIL 'T)
(FSET 'EMIT-UNBOX-LONG (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 71) 29806 'NIL NIL)
(SYSTEM::%DEFKNOWN 'EMIT-UNBOX-FLOAT 'NIL 'T)
(FSET 'EMIT-UNBOX-FLOAT (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 72) 29968 'NIL NIL)
(SYSTEM::%DEFKNOWN 'EMIT-UNBOX-DOUBLE 'NIL 'T)
(FSET 'EMIT-UNBOX-DOUBLE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 73) 30325 'NIL 
NIL)
(SYSTEM::%DEFKNOWN 'FIX-BOXING '(T T) 'T)
(FSET 'FIX-BOXING (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 74) 30681 '(REQUIRED-REPRESENTATION 
DERIVED-TYPE) "Generate code to convert a boxed LispObject on the stack to the specified
representation, based on the derived type of the LispObject.")
(SYSTEM::%DEFKNOWN 'EMIT-MOVE-FROM-STACK '(T &OPTIONAL T) 'T)
(FSET 'EMIT-MOVE-FROM-STACK (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 75) 31839 '(TARGET 
&OPTIONAL REPRESENTATION) NIL)
(SYSTEM::%DEFKNOWN 'EMIT-PUSH-REGISTER '(T &OPTIONAL T) 'T)
(FSET 'EMIT-PUSH-REGISTER (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 76) 32630 '(SOURCE 
&OPTIONAL REPRESENTATION) NIL)
(SYSTEM::%DEFKNOWN 'EMIT-INVOKE-METHOD '(T T T) 'T)
(FSET 'EMIT-INVOKE-METHOD (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 77) 33061 '(METHOD-NAME 
TARGET REPRESENTATION) NIL)
(FSET 'CHECK-NUMBER-OF-ARGS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 78) 33272 '(FORM 
N &OPTIONAL MINIMUM) NIL)
(SYSTEM::%DEFKNOWN 'CHECK-ARG-COUNT '(T FIXNUM) 'T)
(FSET 'CHECK-ARG-COUNT (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 79) 34495 '(FORM 
N) NIL)
(PROCLAIM '(FTYPE (FUNCTION (T FIXNUM) T) CHECK-MIN-ARGS))
(FSET 'CHECK-MIN-ARGS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 80) 34618 '(FORM N) 
NIL)
(FSET 'EMIT-CONSTRUCTOR-LAMBDA-NAME (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 81) 
34684 '(LAMBDA-NAME) NIL)
(FSET 'EMIT-CONSTRUCTOR-LAMBDA-LIST (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 82) 
35232 '(LAMBDA-LIST) NIL)
(FSET 'EMIT-READ-FROM-STRING (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 83) 35362 '(OBJECT) 
NIL)
(FSET 'MAKE-CONSTRUCTOR (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 84) 35442 '(CLASS 
LAMBDA-NAME ARGS) NIL)
(FSET 'MAKE-STATIC-INITIALIZER (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 85) 41109 
'(CLASS) NIL)
(DEFVAR *SOURCE-LINE-NUMBER* NIL)
(FSET 'FINISH-CLASS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 86) 41464 '(CLASS STREAM) 
"Finalizes the `class' and writes the result to `stream'.

The compiler calls this function to indicate it doesn't want to
extend the class any further.")
(SYSTEM::%DEFKNOWN 'DECLARE-FIELD '(T T T) 'T)
(FSET 'DECLARE-FIELD (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 87) 42176 '(NAME DESCRIPTOR) 
NIL)
(SYSTEM::%DEFKNOWN 'SANITIZE '(SYMBOL) 'STRING)
(FSET 'SANITIZE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 88) 42366 '(SYMBOL) NIL)
(DEFVAR *DECLARE-INLINE* NIL)
(FSET 'DECLARE-WITH-HASHTABLE (MAKE-MACRO 'DECLARE-WITH-HASHTABLE (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 89)) 43059 '(DECLARED-ITEM HASHTABLE HASHTABLE-VAR ITEM-VAR &BODY BODY))
(FSET 'SERIALIZE-INTEGER (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 90) 43392 '(N) 
"Generates code to restore a serialized integer.")
(FSET 'SERIALIZE-CHARACTER (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 91) 44940 '(C) 
"Generates code to restore a serialized character.")
(FSET 'SERIALIZE-FLOAT (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 92) 45168 '(S) "Generates code to restore a serialized single-float.")
(FSET 'SERIALIZE-DOUBLE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 93) 45388 '(D) "Generates code to restore a serialized double-float.")
(FSET 'SERIALIZE-STRING (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 94) 45614 '(STRING) 
"Generate code to restore a serialized string.")
(FSET 'SERIALIZE-PACKAGE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 95) 45945 '(PKG) 
"Generate code to restore a serialized package.")
(FSET 'COMPILAND-EXTERNAL-CONSTANT-RESOURCE-NAME (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
96) 46275 '(COMPILAND) NIL)
(FSET 'SERIALIZE-OBJECT (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 98) 46718 '(OBJECT) 
"Generate code to restore a serialized object which is not of any
of the other types.")
(FSET 'SERIALIZE-SYMBOL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 99) 48160 '(SYMBOL) 
"Generate code to restore a serialized symbol.")
(DEFVAR SERIALIZATION-TABLE (SYSTEM::BACKQ-LIST (SYSTEM::BACKQ-LIST 'INTEGER "INT" 
(FUNCTION EQL) (FUNCTION SERIALIZE-INTEGER) +LISP-INTEGER+) (SYSTEM::BACKQ-LIST 'CHARACTER 
"CHR" (FUNCTION EQL) (FUNCTION SERIALIZE-CHARACTER) +LISP-CHARACTER+) (SYSTEM::BACKQ-LIST 
'SINGLE-FLOAT "FLT" (FUNCTION EQL) (FUNCTION SERIALIZE-FLOAT) +LISP-SINGLE-FLOAT+) 
(SYSTEM::BACKQ-LIST 'DOUBLE-FLOAT "DBL" (FUNCTION EQL) (FUNCTION SERIALIZE-DOUBLE) 
+LISP-DOUBLE-FLOAT+) (SYSTEM::BACKQ-LIST 'STRING "STR" (FUNCTION EQUAL) (FUNCTION 
SERIALIZE-STRING) +LISP-ABSTRACT-STRING+) (SYSTEM::BACKQ-LIST 'PACKAGE "PKG" (FUNCTION 
EQ) (FUNCTION SERIALIZE-PACKAGE) +LISP-OBJECT+) (SYSTEM::BACKQ-LIST 'SYMBOL "SYM" 
(FUNCTION EQ) (FUNCTION SERIALIZE-SYMBOL) +LISP-SYMBOL+) (SYSTEM::BACKQ-LIST 'T "OBJ" 
(FUNCTION EQ) (FUNCTION SERIALIZE-OBJECT) +LISP-OBJECT+)) "A list of 5-element lists. The elements of the sublists mean:

1. The type of the value to be serialized
2. The string to be used as a field prefix
3. The function to be used to determine equality (coalescing or not)
4. The function to dispatch serialization to
5. The type of the field to save the serialized result to")
(SYSTEM::%DEFKNOWN 'EMIT-LOAD-EXTERNALIZED-OBJECT '(T &OPTIONAL T) 'STRING)
(FSET 'EMIT-LOAD-EXTERNALIZED-OBJECT (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 100) 
50127 '(OBJECT &OPTIONAL CAST) "Externalizes `object' for use in a FASL.

Returns the name of the field (in `*this-class*') from which
the value of the object can be loaded. Objects may be coalesced based
on the equality indicator in the `serialization-table'.

Code to restore the serialized object is inserted into the current method or
the constructor if `*declare-inline*' is non-nil.
")
(SYSTEM::%DEFKNOWN 'DECLARE-FUNCTION '(SYMBOL &OPTIONAL SETF) 'STRING)
(FSET 'DECLARE-FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 102) 52777 '(SYMBOL 
&OPTIONAL SETF) NIL)
(SYSTEM::%DEFKNOWN 'DECLARE-SETF-FUNCTION '(NAME) 'STRING)
(FSET 'DECLARE-SETF-FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 103) 54746 
'(NAME) NIL)
(FSET 'LOCAL-FUNCTION-CLASS-AND-FIELD (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 104) 
54818 '(LOCAL-FUNCTION) NIL)
(SYSTEM::%DEFKNOWN 'DECLARE-LOCAL-FUNCTION '(LOCAL-FUNCTION) 'STRING)
(FSET 'DECLARE-LOCAL-FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 105) 55209 
'(LOCAL-FUNCTION) NIL)
(SYSTEM::%DEFKNOWN 'DECLARE-OBJECT-AS-STRING '(T) 'STRING)
(FSET 'DECLARE-OBJECT-AS-STRING (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 106) 55857 
'(OBJ) NIL)
(FSET 'DECLARE-LOAD-TIME-VALUE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 107) 56963 
'(OBJ) NIL)
(PROCLAIM '(FTYPE (FUNCTION (T) STRING) DECLARE-OBJECT))
(FSET 'DECLARE-OBJECT (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 108) 57895 '(OBJ) 
"Stores the object OBJ in the object-lookup-table,
loading the object value into a field upon class-creation time.

The field type of the object is specified by OBJ-REF.")
(SYSTEM::%DEFKNOWN 'COMPILE-CONSTANT '(T T T) 'T)
(FSET 'COMPILE-CONSTANT (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 109) 58562 '(FORM 
TARGET REPRESENTATION) NIL)
(DEFPARAMETER *UNARY-OPERATORS* NIL)
(FSET 'INITIALIZE-UNARY-OPERATORS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 110) 61656 
'NIL NIL)
(INITIALIZE-UNARY-OPERATORS)
(SYSTEM::%DEFKNOWN 'INSTALL-P2-HANDLER '* 'T)
(FSET 'INSTALL-P2-HANDLER (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 111) 62738 '(SYMBOL 
&OPTIONAL HANDLER) NIL)
(DEFPARAMETER *PREDICATES* (MAKE-HASH-TABLE :TEST 'EQ))
(FSET 'DEFINE-PREDICATE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 112) 63144 '(NAME 
BOXED-METHOD-NAME UNBOXED-METHOD-NAME) NIL)
(FSET 'DEFINE-INLINED-FUNCTION (MAKE-MACRO 'DEFINE-INLINED-FUNCTION (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 113)) 63339 '(NAME PARAMS PREAMBLE-AND-TEST &BODY BODY))
(SYSTEM::%DEFKNOWN 'P2-PREDICATE '(T T T) 'T)
(FSET 'P2-PREDICATE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 114) 63758 '(FORM TARGET 
REPRESENTATION) NIL)
(DEFINE-PREDICATE 'CONSTANTP "CONSTANTP" "constantp")
(DEFINE-PREDICATE 'ENDP "ENDP" "endp")
(DEFINE-PREDICATE 'EVENP "EVENP" "evenp")
(DEFINE-PREDICATE 'FLOATP "FLOATP" "floatp")
(DEFINE-PREDICATE 'INTEGERP "INTEGERP" "integerp")
(DEFINE-PREDICATE 'LISTP "LISTP" "listp")
(DEFINE-PREDICATE 'MINUSP "MINUSP" "minusp")
(DEFINE-PREDICATE 'NUMBERP "NUMBERP" "numberp")
(DEFINE-PREDICATE 'ODDP "ODDP" "oddp")
(DEFINE-PREDICATE 'PLUSP "PLUSP" "plusp")
(DEFINE-PREDICATE 'RATIONALP "RATIONALP" "rationalp")
(DEFINE-PREDICATE 'REALP "REALP" "realp")
(PROCLAIM '(FTYPE (FUNCTION (T T T T) T) COMPILE-FUNCTION-CALL-1))
(FSET 'COMPILE-FUNCTION-CALL-1 (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 115) 65381 
'(OP ARGS TARGET REPRESENTATION) NIL)
(DEFPARAMETER *BINARY-OPERATORS* NIL)
(FSET 'INITIALIZE-BINARY-OPERATORS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 116) 
66020 'NIL NIL)
(INITIALIZE-BINARY-OPERATORS)
(FSET 'COMPILE-BINARY-OPERATION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 117) 66957 
'(OP ARGS TARGET REPRESENTATION) NIL)
(PROCLAIM '(FTYPE (FUNCTION (T T T T) T) COMPILE-FUNCTION-CALL-2))
(FSET 'COMPILE-FUNCTION-CALL-2 (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 118) 67489 
'(OP ARGS TARGET REPRESENTATION) NIL)
(PROCLAIM '(FTYPE (FUNCTION (T) T) FIXNUM-OR-UNBOXED-VARIABLE-P))
(FSET 'FIXNUM-OR-UNBOXED-VARIABLE-P (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 119) 
67787 '(ARG) NIL)
(PROCLAIM '(FTYPE (FUNCTION (T) T) EMIT-PUSH-INT))
(FSET 'EMIT-PUSH-INT (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 120) 67937 '(ARG) NIL)
(PROCLAIM '(FTYPE (FUNCTION (T) T) EMIT-PUSH-LONG))
(FSET 'EMIT-PUSH-LONG (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 121) 68298 '(ARG) 
NIL)
(SYSTEM::%DEFKNOWN 'P2-EQ/NEQ '(T T T) 'T)
(FSET 'P2-EQ/NEQ (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 122) 68786 '(FORM TARGET 
REPRESENTATION) NIL)
(FSET 'EMIT-IFNE-FOR-EQL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 123) 69545 '(REPRESENTATION 
INSTRUCTION-TYPE) NIL)
(SYSTEM::%DEFKNOWN 'P2-EQL '(T T T) 'T)
(FSET 'P2-EQL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 124) 69755 '(FORM TARGET REPRESENTATION) 
NIL)
(SYSTEM::%DEFKNOWN 'P2-MEMQ '(T T T) 'T)
(FSET 'P2-MEMQ (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 125) 72353 '(FORM TARGET 
REPRESENTATION) NIL)
(SYSTEM::%DEFKNOWN 'P2-MEMQL '(T T T) 'T)
(FSET 'P2-MEMQL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 126) 73041 '(FORM TARGET 
REPRESENTATION) NIL)
(FSET 'P2-GENSYM (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 127) 73958 '(FORM TARGET 
REPRESENTATION) NIL)
(FSET 'P2-GET (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 128) 74318 '(FORM TARGET REPRESENTATION) 
NIL)
(FSET 'P2-GETF (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 129) 75238 '(FORM TARGET 
REPRESENTATION) NIL)
(FSET 'P2-GETHASH (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 130) 76016 '(FORM TARGET 
REPRESENTATION) NIL)
(FSET 'P2-PUTHASH (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 131) 76858 '(FORM TARGET 
REPRESENTATION) NIL)
(DEFVAR *FUNCTIONS-DEFINED-IN-CURRENT-FILE* NIL)
(FSET 'INLINE-OK (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 132) 78017 '(NAME) NIL)
(SYSTEM::%DEFKNOWN 'PROCESS-ARGS '(T T) 'T)
(FSET 'PROCESS-ARGS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 133) 78290 '(ARGS STACK) 
"Compiles forms specified as function call arguments.

The results are either accumulated on the stack or in an array
in order to call the relevant `execute' form. The function call
itself is *not* compiled by this function.")
(SYSTEM::%DEFKNOWN 'LISP-OBJECT-ARG-TYPES '(FIXNUM) 'LIST)
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 134))
(PROCLAIM '(FTYPE (FUNCTION (T) T) EMIT-CALL-EXECUTE))
(FSET 'EMIT-CALL-EXECUTE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 136) 82628 '(NUMARGS) 
NIL)
(PROCLAIM '(FTYPE (FUNCTION (T) T) EMIT-CALL-THREAD-EXECUTE))
(FSET 'EMIT-CALL-THREAD-EXECUTE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 137) 82998 
'(NUMARGS) NIL)
(SYSTEM::%DEFKNOWN 'COMPILE-FUNCTION-CALL '(T T T) 'T)
(FSET 'COMPILE-FUNCTION-CALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 138) 83377 
'(FORM TARGET REPRESENTATION) NIL)
(FSET 'COMPILE-CALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 140) 85427 '(ARGS STACK) 
"Compiles a function call.

Depending on the `*speed*' and `*debug*' settings, a stack frame
is registered (or not).")
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 141))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 143))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 145))
(SYSTEM::%DEFKNOWN 'P2-FUNCALL '(T T T) 'T)
(FSET 'P2-FUNCALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 147) 87786 '(FORM TARGET 
REPRESENTATION) NIL)
(FSET 'DUPLICATE-CLOSURE-ARRAY (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 148) 88296 
'(COMPILAND) NIL)
(FSET 'EMIT-LOAD-LOCAL-FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 149) 89048 
'(LOCAL-FUNCTION) NIL)
(SYSTEM::%DEFKNOWN 'COMPILE-LOCAL-FUNCTION-CALL '(T T T) 'T)
(FSET 'COMPILE-LOCAL-FUNCTION-CALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 150) 
89735 '(FORM TARGET REPRESENTATION) "Compiles a call to a function marked as `*child-p*'; a local function.

Functions this applies to can be FLET, LABELS, LAMBDA or NAMED-LAMBDA.
Note: DEFUN implies a named lambda.")
(DEFVAR COMPARISON-OPS '(< <= > >= =))
(DEFVAR COMPARISON-INS '((:INT . #(IF_ICMPGE IF_ICMPGT IF_ICMPLE IF_ICMPLT IF_ICMPNE)) 
(:LONG . #((LCMP IFGE) (LCMP IFGT) (LCMP IFLE) (LCMP IFLT) (LCMP IFNE))) (:FLOAT . #((FCMPG 
IFGE) (FCMPG IFGT) (FCMPL IFLE) (FCMPL IFLT) (FCMPL IFNE))) (:DOUBLE . #((DCMPG IFGE)
 (DCMPG IFGT) (DCMPL IFLE) (DCMPL IFLT) (DCMPL IFNE)))) "Instructions to be generated upon each comparison operation,
given a specific common representation.")
(FSET 'EMIT-NUMERIC-COMPARISON (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 151) 91576 
'(OP REPRESENTATION FALSE-LABEL) NIL)
(SYSTEM::%DEFKNOWN 'P2-NUMERIC-COMPARISON '(T T T) 'T)
(FSET 'P2-NUMERIC-COMPARISON (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 152) 92031 
'(FORM TARGET REPRESENTATION) NIL)
(DEFPARAMETER *P2-TEST-HANDLERS* NIL)
(FSET 'P2-TEST-HANDLER (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 153) 96857 '(OP) 
NIL)
(FSET 'INITIALIZE-P2-TEST-HANDLERS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 154) 
96939 'NIL NIL)
(INITIALIZE-P2-TEST-HANDLERS)
(SYSTEM::%DEFKNOWN 'NEGATE-JUMP-CONDITION '(T) 'T)
(FSET 'NEGATE-JUMP-CONDITION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 155) 99781 
'(JUMP-INSTRUCTION) NIL)
(SYSTEM::%DEFKNOWN 'EMIT-TEST-JUMP '(T T T) 'T)
(FSET 'EMIT-TEST-JUMP (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 156) 100270 '(JUMP 
SUCCESS-LABEL FAILURE-LABEL) NIL)
(SYSTEM::%DEFKNOWN 'P2-TEST-PREDICATE '(T T) 'T)
(FSET 'P2-TEST-PREDICATE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 157) 100553 '(FORM 
JAVA-PREDICATE SUCCESS-LABEL FAILURE-LABEL) NIL)
(PROCLAIM '(FTYPE (FUNCTION (T T T T) T) P2-TEST-INSTANCEOF-PREDICATE))
(FSET 'P2-TEST-INSTANCEOF-PREDICATE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 158) 
100956 '(FORM JAVA-CLASS SUCCESS-LABEL FAILURE-LABEL) NIL)
(FSET 'P2-TEST-BIT-VECTOR-P (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 159) 101298 
'(FORM SUCCESS-LABEL FAILURE-LABEL) NIL)
(FSET 'P2-TEST-CHARACTERP (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 160) 101488 '(FORM 
SUCCESS-LABEL FAILURE-LABEL) NIL)
(FSET 'P2-TEST-CONSTANTP (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 161) 101666 '(FORM 
SUCCESS-LABEL FAILURE-LABEL) NIL)
(FSET 'P2-TEST-ENDP (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 162) 102039 '(FORM SUCCESS-LABEL 
FAILURE-LABEL) NIL)
(FSET 'P2-TEST-INTEGER-PREDICATE (MAKE-MACRO 'P2-TEST-INTEGER-PREDICATE (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 163)) 102158 '((FORM PREDICATE SUCCESS-LABEL FAILURE-LABEL) &BODY INSTRUCTIONS))
(FSET 'P2-TEST-EVENP (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 164) 102804 '(FORM 
SUCCESS-LABEL FAILURE-LABEL) NIL)
(FSET 'P2-TEST-ODDP (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 165) 103038 '(FORM SUCCESS-LABEL 
FAILURE-LABEL) NIL)
(FSET 'P2-TEST-FLOATP (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 166) 103270 '(FORM 
SUCCESS-LABEL FAILURE-LABEL) NIL)
(FSET 'P2-TEST-INTEGERP (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 167) 103393 '(FORM 
SUCCESS-LABEL FAILURE-LABEL) NIL)
(FSET 'P2-TEST-LISTP (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 168) 103520 '(FORM 
SUCCESS-LABEL FAILURE-LABEL) NIL)
(FSET 'P2-TEST-MINUSP (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 169) 104050 '(FORM 
SUCCESS-LABEL FAILURE-LABEL) NIL)
(FSET 'P2-TEST-PLUSP (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 170) 104239 '(FORM 
SUCCESS-LABEL FAILURE-LABEL) NIL)
(FSET 'P2-TEST-ZEROP (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 171) 104425 '(FORM 
SUCCESS-LABEL FAILURE-LABEL) NIL)
(FSET 'P2-TEST-NUMBERP (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 172) 104611 '(FORM 
SUCCESS-LABEL FAILURE-LABEL) NIL)
(FSET 'P2-TEST-PACKAGEP (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 173) 104736 '(FORM 
SUCCESS-LABEL FAILURE-LABEL) NIL)
(FSET 'P2-TEST-RATIONALP (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 174) 104910 '(FORM 
SUCCESS-LABEL FAILURE-LABEL) NIL)
(FSET 'P2-TEST-REALP (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 175) 105039 '(FORM 
SUCCESS-LABEL FAILURE-LABEL) NIL)
(FSET 'P2-TEST-SPECIAL-OPERATOR-P (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 176) 105160 
'(FORM SUCCESS-LABEL FAILURE-LABEL) NIL)
(FSET 'P2-TEST-SPECIAL-VARIABLE-P (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 177) 105306 
'(FORM SUCCESS-LABEL FAILURE-LABEL) NIL)
(FSET 'P2-TEST-SYMBOLP (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 178) 105452 '(FORM 
SUCCESS-LABEL FAILURE-LABEL) NIL)
(FSET 'P2-TEST-CONSP (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 179) 105592 '(FORM 
SUCCESS-LABEL FAILURE-LABEL) NIL)
(FSET 'P2-TEST-ATOM (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 180) 105728 '(FORM SUCCESS-LABEL 
FAILURE-LABEL) NIL)
(FSET 'P2-TEST-FIXNUMP (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 181) 105950 '(FORM 
SUCCESS-LABEL FAILURE-LABEL) NIL)
(FSET 'P2-TEST-STRINGP (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 182) 106090 '(FORM 
SUCCESS-LABEL FAILURE-LABEL) NIL)
(FSET 'P2-TEST-VECTORP (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 183) 106271 '(FORM 
SUCCESS-LABEL FAILURE-LABEL) NIL)
(FSET 'P2-TEST-SIMPLE-VECTOR-P (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 184) 106452 
'(FORM SUCCESS-LABEL FAILURE-LABEL) NIL)
(SYSTEM::%DEFKNOWN 'COMPILE-TEST-FORM '(T) 'T)
(FSET 'COMPILE-TEST-FORM (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 185) 106675 '(TEST-FORM 
SUCCESS-LABEL FAILURE-LABEL) NIL)
(FSET 'P2-TEST-NOT/NULL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 186) 107464 '(FORM 
SUCCESS-LABEL FAILURE-LABEL) NIL)
(FSET 'P2-TEST-CHAR= (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 187) 107768 '(FORM 
SUCCESS-LABEL FAILURE-LABEL) NIL)
(FSET 'P2-TEST-EQ (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 188) 108195 '(FORM SUCCESS-LABEL 
FAILURE-LABEL) NIL)
(FSET 'P2-TEST-OR (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 189) 108570 '(FORM SUCCESS-LABEL 
FAILURE-LABEL) NIL)
(FSET 'P2-TEST-AND (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 190) 109371 '(FORM SUCCESS-LABEL 
FAILURE-LABEL) NIL)
(FSET 'P2-TEST-NEQ (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 191) 110158 '(FORM SUCCESS-LABEL 
FAILURE-LABEL) NIL)
(FSET 'P2-TEST-EQL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 192) 110262 '(FORM SUCCESS-LABEL 
FAILURE-LABEL) NIL)
(FSET 'P2-TEST-EQUALITY (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 193) 113053 '(FORM 
SUCCESS-LABEL FAILURE-LABEL) NIL)
(FSET 'P2-TEST-SIMPLE-TYPEP (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 194) 114189 
'(FORM SUCCESS-LABEL FAILURE-LABEL) NIL)
(FSET 'P2-TEST-MEMQ (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 195) 114732 '(FORM SUCCESS-LABEL 
FAILURE-LABEL) NIL)
(FSET 'P2-TEST-MEMQL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 196) 115225 '(FORM 
SUCCESS-LABEL FAILURE-LABEL) NIL)
(FSET 'P2-TEST-/= (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 197) 115720 '(FORM SUCCESS-LABEL 
FAILURE-LABEL) NIL)
(FSET 'P2-TEST-NUMERIC-COMPARISON (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 198) 117706 
'(FORM SUCCESS-LABEL FAILURE-LABEL) NIL)
(SYSTEM::%DEFKNOWN 'P2-IF '(T T T) 'T)
(FSET 'P2-IF (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 199) 121827 '(FORM TARGET REPRESENTATION) 
NIL)
(FSET 'COMPILE-MULTIPLE-VALUE-LIST (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 200) 
122461 '(FORM TARGET REPRESENTATION) NIL)
(FSET 'COMPILE-MULTIPLE-VALUE-PROG1 (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 201) 
122767 '(FORM TARGET REPRESENTATION) NIL)
(FSET 'COMPILE-MULTIPLE-VALUE-CALL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 202) 
123662 '(FORM TARGET REPRESENTATION) NIL)
(SYSTEM::%DEFKNOWN 'UNUSED-VARIABLE '(T) 'T)
(FSET 'UNUSED-VARIABLE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 203) 125781 '(VARIABLE) 
NIL)
(SYSTEM::%DEFKNOWN 'CHECK-FOR-UNUSED-VARIABLES '(LIST) 'T)
(FSET 'CHECK-FOR-UNUSED-VARIABLES (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 204) 126076 
'(LIST) NIL)
(PROCLAIM '(FTYPE (FUNCTION (T) T) EMIT-NEW-CLOSURE-BINDING))
(FSET 'EMIT-NEW-CLOSURE-BINDING (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 205) 126391 
'(VARIABLE) "")
(PROCLAIM '(FTYPE (FUNCTION (T) T) COMPILE-BINDING))
(FSET 'COMPILE-BINDING (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 206) 127222 '(VARIABLE) 
NIL)
(SYSTEM::%DEFKNOWN 'COMPILE-PROGN-BODY '(T T &OPTIONAL T) 'T)
(FSET 'COMPILE-PROGN-BODY (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 207) 128058 '(BODY 
TARGET &OPTIONAL REPRESENTATION) NIL)
(FSET 'RESTORE-DYNAMIC-ENVIRONMENT (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 208) 
128868 '(REGISTER) NIL)
(FSET 'SAVE-DYNAMIC-ENVIRONMENT (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 209) 129093 
'(REGISTER) NIL)
(FSET 'P2-M-V-B-NODE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 210) 129308 '(BLOCK 
TARGET) NIL)
(FSET 'PROPAGATE-VARS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 211) 133136 '(BLOCK) 
NIL)
(FSET 'DERIVE-VARIABLE-REPRESENTATION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 212) 
136294 '(VARIABLE BLOCK &KEY (TYPE NIL TYPE-SUPPLIED-P)) NIL)
(FSET 'ALLOCATE-VARIABLE-REGISTER (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 213) 139142 
'(VARIABLE) NIL)
(FSET 'EMIT-MOVE-TO-VARIABLE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 214) 139290 
'(VARIABLE) NIL)
(FSET 'EMIT-PUSH-VARIABLE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 215) 140885 '(VARIABLE) 
NIL)
(SYSTEM::%DEFKNOWN 'P2-LET-BINDINGS '(T) 'T)
(FSET 'P2-LET-BINDINGS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 216) 142209 '(BLOCK) 
NIL)
(SYSTEM::%DEFKNOWN 'P2-LET*-BINDINGS '(T) 'T)
(FSET 'P2-LET*-BINDINGS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 217) 145408 '(BLOCK) 
NIL)
(FSET 'P2-LET/LET*-NODE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 218) 149647 '(BLOCK 
TARGET REPRESENTATION) NIL)
(SYSTEM::%DEFKNOWN 'P2-LOCALLY-NODE '(T T T) 'T)
(FSET 'P2-LOCALLY-NODE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 219) 151025 '(BLOCK 
TARGET REPRESENTATION) NIL)
(SYSTEM::%DEFKNOWN 'P2-TAGBODY-NODE '(T T) 'T)
(FSET 'P2-TAGBODY-NODE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 220) 151470 '(BLOCK 
TARGET) NIL)
(SYSTEM::%DEFKNOWN 'P2-GO '(T T T) 'T)
(FSET 'P2-GO (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 221) 155400 '(FORM TARGET REPRESENTATION) 
NIL)
(SYSTEM::%DEFKNOWN 'P2-ATOM '(T T T) 'T)
(FSET 'P2-ATOM (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 222) 156812 '(FORM TARGET 
REPRESENTATION) NIL)
(SYSTEM::%DEFKNOWN 'P2-INSTANCEOF-PREDICATE '(T T T T) 'T)
(FSET 'P2-INSTANCEOF-PREDICATE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 223) 157516 
'(FORM TARGET REPRESENTATION JAVA-CLASS) NIL)
(FSET 'P2-BIT-VECTOR-P (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 224) 158084 '(FORM 
TARGET REPRESENTATION) NIL)
(FSET 'P2-CHARACTERP (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 225) 158220 '(FORM 
TARGET REPRESENTATION) NIL)
(FSET 'P2-CONSP (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 226) 158344 '(FORM TARGET 
REPRESENTATION) NIL)
(FSET 'P2-FIXNUMP (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 227) 158458 '(FORM TARGET 
REPRESENTATION) NIL)
(FSET 'P2-PACKAGEP (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 228) 158576 '(FORM TARGET 
REPRESENTATION) NIL)
(FSET 'P2-READTABLEP (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 229) 158696 '(FORM 
TARGET REPRESENTATION) NIL)
(FSET 'P2-SIMPLE-VECTOR-P (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 230) 158820 '(FORM 
TARGET REPRESENTATION) NIL)
(FSET 'P2-STRINGP (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 231) 158953 '(FORM TARGET 
REPRESENTATION) NIL)
(FSET 'P2-SYMBOLP (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 232) 159080 '(FORM TARGET 
REPRESENTATION) NIL)
(FSET 'P2-VECTORP (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 233) 159198 '(FORM TARGET 
REPRESENTATION) NIL)
(FSET 'P2-COERCE-TO-FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 234) 159325 
'(FORM TARGET REPRESENTATION) NIL)
(FSET 'P2-BLOCK-NODE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 235) 159643 '(BLOCK 
TARGET REPRESENTATION) NIL)
(SYSTEM::%DEFKNOWN 'P2-RETURN-FROM '(T T T) 'T)
(FSET 'P2-RETURN-FROM (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 236) 162575 '(FORM 
TARGET REPRESENTATION) NIL)
(FSET 'EMIT-CAR/CDR (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 237) 164144 '(ARG TARGET 
REPRESENTATION FIELD) NIL)
(FSET 'P2-CAR (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 238) 164312 '(FORM TARGET 
REPRESENTATION) NIL)
(FSET 'P2-CDR (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 239) 164797 '(FORM TARGET 
REPRESENTATION) NIL)
(FSET 'P2-CONS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 240) 164969 '(FORM TARGET 
REPRESENTATION) NIL)
(FSET 'COMPILE-PROGN (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 241) 165856 '(FORM 
TARGET REPRESENTATION) NIL)
(FSET 'P2-EVAL-WHEN (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 242) 165983 '(FORM TARGET 
REPRESENTATION) NIL)
(FSET 'P2-LOAD-TIME-VALUE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 243) 166282 '(FORM 
TARGET REPRESENTATION) NIL)
(FSET 'P2-PROGV-NODE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 244) 166655 '(BLOCK 
TARGET REPRESENTATION) NIL)
(FSET 'P2-QUOTE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 245) 167606 '(FORM TARGET 
REPRESENTATION) NIL)
(FSET 'P2-RPLACD (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 246) 168457 '(FORM TARGET 
REPRESENTATION) NIL)
(FSET 'P2-SET-CAR/CDR (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 247) 169473 '(FORM 
TARGET REPRESENTATION) NIL)
(FSET 'COMPILE-DECLARE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 248) 170582 '(FORM 
TARGET REPRESENTATION) NIL)
(FSET 'COMPILE-LOCAL-FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 249) 170747 
'(LOCAL-FUNCTION) NIL)
(SYSTEM::%DEFKNOWN 'P2-FLET-NODE '(T T T) 'T)
(FSET 'P2-FLET-NODE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 250) 171898 '(BLOCK 
TARGET REPRESENTATION) NIL)
(SYSTEM::%DEFKNOWN 'P2-LABELS-NODE '(T T T) 'T)
(FSET 'P2-LABELS-NODE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 251) 172645 '(BLOCK 
TARGET REPRESENTATION) NIL)
(FSET 'P2-LAMBDA (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 252) 173361 '(LOCAL-FUNCTION 
TARGET) NIL)
(SYSTEM::%DEFKNOWN 'P2-FUNCTION '(T T T) 'T)
(FSET 'P2-FUNCTION (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 253) 173556 '(FORM TARGET 
REPRESENTATION) NIL)
(SYSTEM::%DEFKNOWN 'P2-ASH '(T T T) 'T)
(FSET 'P2-ASH (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 254) 176327 '(FORM TARGET 
REPRESENTATION) NIL)
(SYSTEM::%DEFKNOWN 'P2-LOGAND '(T T T) 'T)
(FSET 'P2-LOGAND (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 255) 180815 '(FORM TARGET 
REPRESENTATION) NIL)
(SYSTEM::%DEFKNOWN 'P2-LOGIOR '(T T T) 'T)
(FSET 'P2-LOGIOR (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 256) 186335 '(FORM TARGET 
REPRESENTATION) NIL)
(SYSTEM::%DEFKNOWN 'P2-LOGXOR '(T T T) 'T)
(FSET 'P2-LOGXOR (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 257) 191021 '(FORM TARGET 
REPRESENTATION) NIL)
(SYSTEM::%DEFKNOWN 'P2-LOGNOT '(T T T) 'T)
(FSET 'P2-LOGNOT (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 258) 193709 '(FORM TARGET 
REPRESENTATION) NIL)
(SYSTEM::%DEFKNOWN 'P2-%LDB '(T T T) 'T)
(FSET 'P2-%LDB (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 259) 194488 '(FORM TARGET 
REPRESENTATION) NIL)
(SYSTEM::%DEFKNOWN 'P2-MOD '(T T T) 'T)
(FSET 'P2-MOD (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 260) 198154 '(FORM TARGET 
REPRESENTATION) NIL)
(SYSTEM::%DEFKNOWN 'P2-ZEROP '(T T T) 'T)
(FSET 'P2-ZEROP (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 261) 199734 '(FORM TARGET 
REPRESENTATION) NIL)
(SYSTEM::%DEFKNOWN 'P2-FIND-CLASS '(T T T) 'T)
(FSET 'P2-FIND-CLASS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 262) 201364 '(FORM 
TARGET REPRESENTATION) NIL)
(FSET 'P2-VECTOR-PUSH-EXTEND (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 263) 202828 
'(FORM TARGET REPRESENTATION) NIL)
(SYSTEM::%DEFKNOWN 'P2-STD-SLOT-VALUE '(T T T) 'T)
(FSET 'P2-STD-SLOT-VALUE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 264) 203822 '(FORM 
TARGET REPRESENTATION) NIL)
(SYSTEM::%DEFKNOWN 'P2-SET-STD-SLOT-VALUE '(T T T) 'T)
(FSET 'P2-SET-STD-SLOT-VALUE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 265) 204466 
'(FORM TARGET REPRESENTATION) NIL)
(SYSTEM::%DEFKNOWN 'P2-STREAM-ELEMENT-TYPE '(T T T) 'T)
(FSET 'P2-STREAM-ELEMENT-TYPE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 266) 205343 
'(FORM TARGET REPRESENTATION) NIL)
(SYSTEM::%DEFKNOWN 'P2-WRITE-8-BITS '(T T T) 'T)
(FSET 'P2-WRITE-8-BITS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 267) 205961 '(FORM 
TARGET REPRESENTATION) NIL)
(FSET 'P2-READ-LINE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 268) 207182 '(FORM TARGET 
REPRESENTATION) NIL)
(FSET 'DEFINE-DERIVE-TYPE-HANDLER (MAKE-MACRO 'DEFINE-DERIVE-TYPE-HANDLER (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 269)) 208681 '(OP LAMBDA-LIST &BODY BODY))
(SYSTEM::%DEFKNOWN 'DERIVE-TYPE-AREF '(T) 'T)
(FSET 'DERIVE-TYPE-AREF (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 270) 208965 '(FORM) 
NIL)
(PUT 'AREF 'DERIVE-TYPE-HANDLER 'DERIVE-TYPE-AREF)
(SYSTEM::%DEFKNOWN 'DERIVE-TYPE-FIXNUMP '(T) 'T)
(FSET 'DERIVE-TYPE-FIXNUMP (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 271) 209567 '(FORM) 
NIL)
(PUT 'FIXNUMP 'DERIVE-TYPE-HANDLER 'DERIVE-TYPE-FIXNUMP)
(SYSTEM::%DEFKNOWN 'DERIVE-TYPE-SETQ '(T) 'T)
(FSET 'DERIVE-TYPE-SETQ (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 272) 209706 '(FORM) 
NIL)
(PUT 'SETQ 'DERIVE-TYPE-HANDLER 'DERIVE-TYPE-SETQ)
(SYSTEM::%DEFKNOWN 'DERIVE-TYPE-LOGIOR/LOGXOR '(T) 'T)
(FSET 'DERIVE-TYPE-LOGIOR/LOGXOR (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 273) 209869 
'(FORM) NIL)
(SYSTEM::%DEFKNOWN 'DERIVE-TYPE-LOGAND '(T) 'T)
(FSET 'DERIVE-TYPE-LOGAND (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 274) 211292 '(FORM) 
NIL)
(PROCLAIM '(FTYPE (FUNCTION (T) T) DERIVE-TYPE-LOGNOT))
(FSET 'DERIVE-TYPE-LOGNOT (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 275) 213282 '(FORM) 
NIL)
(PROCLAIM '(FTYPE (FUNCTION (T) T) DERIVE-TYPE-MOD))
(FSET 'DERIVE-TYPE-MOD (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 276) 213854 '(FORM) 
NIL)
(SYSTEM::%DEFKNOWN 'DERIVE-TYPE-COERCE '(T) 'T)
(FSET 'DERIVE-TYPE-COERCE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 277) 214250 '(FORM) 
NIL)
(SYSTEM::%DEFKNOWN 'DERIVE-TYPE-COPY-SEQ '(T) 'T)
(FSET 'DERIVE-TYPE-COPY-SEQ (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 278) 214533 
'(FORM) NIL)
(SYSTEM::%DEFKNOWN 'DERIVE-TYPE-INTEGER-LENGTH '(T) 'T)
(FSET 'DERIVE-TYPE-INTEGER-LENGTH (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 279) 214826 
'(FORM) NIL)
(SYSTEM::%DEFKNOWN 'DERIVE-TYPE-%LDB '(T) 'T)
(FSET 'DERIVE-TYPE-%LDB (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 280) 215361 '(FORM) 
NIL)
(FSET 'DEFINE-INT-BOUNDS-DERIVATION (MAKE-MACRO 'DEFINE-INT-BOUNDS-DERIVATION (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 281)) 215623 '(NAME (LOW1 HIGH1 LOW2 HIGH2) &BODY BODY))
(FSET 'DERIVE-INTEGER-TYPE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 282) 216027 '(OP 
TYPE1 TYPE2) "Derives the composed integer type of operation `op' given integer
types `type1' and `type2'.")
(DEFVAR NUMERIC-OP-TYPE-DERIVATION (SYSTEM::BACKQ-LIST (SYSTEM::BACKQ-LIST* '(+ - 
*) (SYSTEM::BACKQ-LIST 'INTEGER 'INTEGER (FUNCTION DERIVE-INTEGER-TYPE)) '((INTEGER 
SINGLE-FLOAT SINGLE-FLOAT) (INTEGER DOUBLE-FLOAT DOUBLE-FLOAT) (SINGLE-FLOAT INTEGER 
SINGLE-FLOAT) (SINGLE-FLOAT DOUBLE-FLOAT DOUBLE-FLOAT) (DOUBLE-FLOAT INTEGER DOUBLE-FLOAT) 
(DOUBLE-FLOAT SINGLE-FLOAT DOUBLE-FLOAT))) '((/) (INTEGER SINGLE-FLOAT SINGLE-FLOAT) 
(INTEGER DOUBLE-FLOAT DOUBLE-FLOAT) (SINGLE-FLOAT INTEGER SINGLE-FLOAT) (SINGLE-FLOAT 
DOUBLE-FLOAT DOUBLE-FLOAT) (DOUBLE-FLOAT INTEGER DOUBLE-FLOAT) (DOUBLE-FLOAT SINGLE-FLOAT 
DOUBLE-FLOAT)) (SYSTEM::BACKQ-LIST '(ASH) (SYSTEM::BACKQ-LIST 'INTEGER 'INTEGER (FUNCTION 
DERIVE-INTEGER-TYPE))) (SYSTEM::BACKQ-LIST* '(MIN MAX) (SYSTEM::BACKQ-LIST 'INTEGER 
'INTEGER (FUNCTION DERIVE-INTEGER-TYPE)) '((INTEGER SINGLE-FLOAT SINGLE-FLOAT) (INTEGER 
DOUBLE-FLOAT DOUBLE-FLOAT) (SINGLE-FLOAT DOUBLE-FLOAT DOUBLE-FLOAT) (DOUBLE-FLOAT 
SINGLE-FLOAT DOUBLE-FLOAT)))) "Table used to derive the return type of a numeric operation,
based on the types of the arguments.")
(FSET 'DERIVE-TYPE-NUMERIC-OP (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 283) 217592 
'(OP &REST TYPES) "Returns the result type of the numeric operation `op' and the types
of the operation arguments given in `types'.")
(DEFVAR ZERO-INTEGER-TYPE (%MAKE-INTEGER-TYPE 0 0) "Integer type representing the 0 (zero)
value for use with derive-type-minus and derive-type-plus.")
(PUT '- 'INT-BOUNDS (FUNCTION (LAMBDA (LOW1 HIGH1 LOW2 HIGH2) (DECLARE (IGNORABLE 
LOW1 HIGH1 LOW2 HIGH2)) (VALUES (WHEN (AND LOW1 HIGH2) (IF LOW2 (MIN (- LOW1 LOW2) 
(- LOW1 HIGH2)) (- LOW1 HIGH2))) (WHEN (AND HIGH1 LOW2) (IF HIGH2 (MAX (- HIGH1 LOW2) 
(- HIGH1 HIGH2)) (- HIGH1 LOW2)))))))
(FSET 'DERIVE-COMPILER-TYPES (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 285) 219639 
'(ARGS OP) NIL)
(SYSTEM::%DEFKNOWN 'DERIVE-TYPE-MINUS '(T) 'T)
(FSET 'DERIVE-TYPE-MINUS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 287) 219909 '(FORM) 
NIL)
(PUT '+ 'INT-BOUNDS (FUNCTION (LAMBDA (LOW1 HIGH1 LOW2 HIGH2) (DECLARE (IGNORABLE 
LOW1 HIGH1 LOW2 HIGH2)) (VALUES (AND LOW1 LOW2 (+ LOW1 LOW2)) (AND HIGH1 HIGH2 (+ 
HIGH1 HIGH2))))))
(SYSTEM::%DEFKNOWN 'DERIVE-TYPE-PLUS '(T) 'T)
(FSET 'DERIVE-TYPE-PLUS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 288) 220408 '(FORM) 
NIL)
(PUT '* 'INT-BOUNDS (FUNCTION (LAMBDA (LOW1 HIGH1 LOW2 HIGH2) (DECLARE (IGNORABLE 
LOW1 HIGH1 LOW2 HIGH2)) (COND ((OR (NULL LOW1) (NULL LOW2)) (VALUES NIL NIL)) ((OR 
(NULL HIGH1) (NULL HIGH2)) (VALUES (IF (OR (MINUSP LOW1) (MINUSP LOW2)) (- (* (ABS 
LOW1) (ABS LOW2))) (* LOW1 LOW2)) NIL)) ((OR (MINUSP LOW1) (MINUSP LOW2)) (LET ((MAX 
(* (MAX (ABS LOW1) (ABS HIGH1)) (MAX (ABS LOW2) (ABS HIGH2))))) (VALUES (- MAX) MAX))) 
(T (VALUES (* LOW1 LOW2) (* HIGH1 HIGH2)))))))
(DEFVAR ONE-INTEGER-TYPE (%MAKE-INTEGER-TYPE 1 1) "Integer type representing the value 1 (one)
for use with derive-type-times.")
(FSET 'DERIVE-TYPE-TIMES (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 289) 221280 '(FORM) 
NIL)
(PUT 'MAX 'INT-BOUNDS (FUNCTION (LAMBDA (LOW1 LOW2 HIGH1 HIGH2) (DECLARE (IGNORABLE 
LOW1 LOW2 HIGH1 HIGH2)) (VALUES (OR (WHEN (AND LOW1 LOW2) (MAX LOW1 LOW2)) LOW1 LOW2) 
(WHEN (AND HIGH1 HIGH2) (MAX HIGH1 HIGH2))))))
(PROCLAIM '(FTYPE (FUNCTION (T) T) DERIVE-TYPE-MAX))
(FSET 'DERIVE-TYPE-MAX (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 290) 221747 '(FORM) 
NIL)
(PUT 'MIN 'INT-BOUNDS (FUNCTION (LAMBDA (LOW1 HIGH1 LOW2 HIGH2) (DECLARE (IGNORABLE 
LOW1 HIGH1 LOW2 HIGH2)) (VALUES (WHEN (AND LOW1 LOW2) (MIN LOW1 LOW2)) (OR (WHEN 
(AND HIGH1 HIGH2) (MIN HIGH1 HIGH2)) HIGH1 HIGH2)))))
(SYSTEM::%DEFKNOWN 'DERIVE-TYPE-MIN '(T) 'T)
(FSET 'DERIVE-TYPE-MIN (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 291) 222147 '(FORM) 
NIL)
(PROCLAIM '(FTYPE (FUNCTION (T) T) DERIVE-TYPE-READ-CHAR))
(FSET 'DERIVE-TYPE-READ-CHAR (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 292) 222402 
'(FORM) NIL)
(PUT 'ASH 'INT-BOUNDS (FUNCTION (LAMBDA (LOW1 HIGH1 LOW2 HIGH2) (DECLARE (IGNORABLE 
LOW1 HIGH1 LOW2 HIGH2)) (WHEN (AND LOW1 HIGH1 LOW2 HIGH2) (COND ((AND (>= LOW1 0) 
(>= HIGH1 0) (>= LOW2 0) (>= HIGH2 0)) (VALUES (ASH LOW1 LOW2) (UNLESS (<= 64 HIGH2) 
(ASH HIGH1 HIGH2)))) ((AND (>= LOW1 0) (>= HIGH1 0) (<= LOW2 0) (<= HIGH2 0)) (VALUES 
(ASH LOW1 LOW2) (ASH HIGH1 HIGH2))))))))
(SYSTEM::%DEFKNOWN 'DERIVE-TYPE-ASH '(T) 'T)
(FSET 'DERIVE-TYPE-ASH (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 293) 223077 '(FORM) 
NIL)
(SYSTEM::%DEFKNOWN 'DERIVE-TYPE '(T) 'T)
(FSET 'DERIVE-TYPE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 294) 223299 '(FORM) NIL)
(FSET 'DERIVE-COMPILER-TYPE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 295) 228741 
'(FORM) NIL)
(SYSTEM::%DEFKNOWN 'P2-DELETE '(T T T) 'T)
(FSET 'P2-DELETE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 296) 228924 '(FORM TARGET 
REPRESENTATION) NIL)
(FSET 'P2-LENGTH (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 297) 230033 '(FORM TARGET 
REPRESENTATION) NIL)
(FSET 'CONS-FOR-LIST/LIST* (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 298) 230861 '(FORM 
TARGET REPRESENTATION &OPTIONAL LIST-STAR-P) NIL)
(FSET 'P2-LIST (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 299) 232315 '(FORM TARGET 
REPRESENTATION) NIL)
(FSET 'P2-LIST* (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 300) 232412 '(FORM TARGET 
REPRESENTATION) NIL)
(FSET 'COMPILE-NTH (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 301) 232512 '(FORM TARGET 
REPRESENTATION) NIL)
(FSET 'P2-TIMES (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 302) 233057 '(FORM TARGET 
REPRESENTATION) NIL)
(SYSTEM::%DEFKNOWN 'P2-MIN/MAX '(T T T) 'T)
(FSET 'P2-MIN/MAX (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 304) 235253 '(FORM TARGET 
REPRESENTATION) NIL)
(FSET 'P2-PLUS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 305) 238834 '(FORM TARGET 
REPRESENTATION) NIL)
(FSET 'P2-MINUS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 307) 242033 '(FORM TARGET 
REPRESENTATION) NIL)
(SYSTEM::%DEFKNOWN 'P2-CHAR/SCHAR '(T T T) 'T)
(FSET 'P2-CHAR/SCHAR (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 309) 245386 '(FORM 
TARGET REPRESENTATION) NIL)
(SYSTEM::%DEFKNOWN 'P2-SET-CHAR/SCHAR '(T T T) 'T)
(FSET 'P2-SET-CHAR/SCHAR (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 310) 247008 '(FORM 
TARGET REPRESENTATION) NIL)
(FSET 'P2-SVREF (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 311) 248898 '(FORM TARGET 
REPRESENTATION) NIL)
(FSET 'P2-SVSET (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 312) 249531 '(FORM TARGET 
REPRESENTATION) NIL)
(FSET 'P2-TRUNCATE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 313) 250493 '(FORM TARGET 
REPRESENTATION) NIL)
(FSET 'P2-ELT (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 314) 251372 '(FORM TARGET 
REPRESENTATION) NIL)
(FSET 'P2-AREF (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 315) 252053 '(FORM TARGET 
REPRESENTATION) NIL)
(FSET 'P2-ASET (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 316) 253601 '(FORM TARGET 
REPRESENTATION) NIL)
(SYSTEM::%DEFKNOWN 'P2-STRUCTURE-REF '(T T T) 'T)
(FSET 'P2-STRUCTURE-REF (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 317) 255828 '(FORM 
TARGET REPRESENTATION) NIL)
(SYSTEM::%DEFKNOWN 'P2-STRUCTURE-SET '(T T T) 'T)
(FSET 'P2-STRUCTURE-SET (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 318) 257876 '(FORM 
TARGET REPRESENTATION) NIL)
(FSET 'P2-NOT/NULL (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 320) 259847 '(FORM TARGET 
REPRESENTATION) NIL)
(FSET 'P2-NTHCDR (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 321) 261619 '(FORM TARGET 
REPRESENTATION) NIL)
(FSET 'P2-AND (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 322) 262313 '(FORM TARGET 
REPRESENTATION) NIL)
(SYSTEM::%DEFKNOWN 'P2-OR '(T T T) 'T)
(FSET 'P2-OR (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 323) 263295 '(FORM TARGET REPRESENTATION) 
NIL)
(FSET 'P2-VALUES (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 324) 264325 '(FORM TARGET 
REPRESENTATION) NIL)
(FSET 'COMPILE-SPECIAL-REFERENCE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 325) 266206 
'(VARIABLE TARGET REPRESENTATION) NIL)
(SYSTEM::%DEFKNOWN 'COMPILE-VAR-REF '(T T T) 'T)
(FSET 'COMPILE-VAR-REF (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 326) 267884 '(REF 
TARGET REPRESENTATION) NIL)
(FSET 'P2-SET (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 327) 268859 '(FORM TARGET 
REPRESENTATION) NIL)
(SYSTEM::%DEFKNOWN 'P2-SETQ '(T T T) 'T)
(FSET 'P2-SETQ (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 328) 269589 '(FORM TARGET 
REPRESENTATION) NIL)
(FSET 'P2-SXHASH (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 329) 275293 '(FORM TARGET 
REPRESENTATION) NIL)
(SYSTEM::%DEFKNOWN 'P2-SYMBOL-NAME '(T T T) 'T)
(FSET 'P2-SYMBOL-NAME (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 330) 275768 '(FORM 
TARGET REPRESENTATION) NIL)
(SYSTEM::%DEFKNOWN 'P2-SYMBOL-PACKAGE '(T T T) 'T)
(FSET 'P2-SYMBOL-PACKAGE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 331) 276324 '(FORM 
TARGET REPRESENTATION) NIL)
(SYSTEM::%DEFKNOWN 'P2-SYMBOL-VALUE '(T T T) 'T)
(FSET 'P2-SYMBOL-VALUE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 332) 276962 '(FORM 
TARGET REPRESENTATION) NIL)
(SYSTEM::%DEFKNOWN 'GENERATE-INSTANCEOF-TYPE-CHECK-FOR-VALUE '(T) 'T)
(FSET 'GENERATE-INSTANCEOF-TYPE-CHECK-FOR-VALUE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
333) 277655 '(EXPECTED-TYPE) NIL)
(PROCLAIM '(FTYPE (FUNCTION (T) T) GENERATE-TYPE-CHECK-FOR-VALUE))
(FSET 'GENERATE-TYPE-CHECK-FOR-VALUE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 334) 
278948 '(DECLARED-TYPE) NIL)
(FSET 'P2-THE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 335) 279151 '(FORM TARGET 
REPRESENTATION) NIL)
(FSET 'P2-TRULY-THE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 336) 280070 '(FORM TARGET 
REPRESENTATION) NIL)
(SYSTEM::%DEFKNOWN 'P2-CHAR-CODE '(T T T) 'T)
(FSET 'P2-CHAR-CODE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 337) 280208 '(FORM TARGET 
REPRESENTATION) NIL)
(SYSTEM::%DEFKNOWN 'P2-JAVA-JCLASS '(T T T) 'T)
(FSET 'P2-JAVA-JCLASS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 338) 280890 '(FORM 
TARGET REPRESENTATION) NIL)
(SYSTEM::%DEFKNOWN 'P2-JAVA-JCONSTRUCTOR '(T T T) 'T)
(FSET 'P2-JAVA-JCONSTRUCTOR (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 340) 281300 
'(FORM TARGET REPRESENTATION) NIL)
(SYSTEM::%DEFKNOWN 'P2-JAVA-JMETHOD '(T T T) 'T)
(FSET 'P2-JAVA-JMETHOD (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 342) 281731 '(FORM 
TARGET REPRESENTATION) NIL)
(SYSTEM::%DEFKNOWN 'P2-CHAR= '(T T T) 'T)
(FSET 'P2-CHAR= (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 344) 283348 '(FORM TARGET 
REPRESENTATION) NIL)
(SYSTEM::%DEFKNOWN 'P2-THREADS-SYNCHRONIZED-ON '(T T) 'T)
(FSET 'P2-THREADS-SYNCHRONIZED-ON (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 345) 285051 
'(BLOCK TARGET) NIL)
(FSET 'P2-JAVA-JRUN-EXCEPTION-PROTECTED (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
346) 286051 '(BLOCK TARGET) NIL)
(SYSTEM::%DEFKNOWN 'P2-CATCH-NODE '(T T) 'T)
(FSET 'P2-CATCH-NODE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 347) 287261 '(BLOCK 
TARGET) NIL)
(FSET 'P2-THROW (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 348) 290212 '(FORM TARGET 
REPRESENTATION) NIL)
(FSET 'P2-UNWIND-PROTECT-NODE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 349) 290782 
'(BLOCK TARGET) NIL)
(SYSTEM::%DEFKNOWN 'COMPILE-FORM '(T T T) 'T)
(FSET 'COMPILE-FORM (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 350) 294056 '(FORM TARGET 
REPRESENTATION) NIL)
(FSET 'WITH-OPEN-CLASS-FILE (MAKE-MACRO 'WITH-OPEN-CLASS-FILE (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 351)) 297270 '((VAR CLASS-FILE) &BODY BODY))
(SYSTEM::%DEFKNOWN 'P2-COMPILAND-PROCESS-TYPE-DECLARATIONS '(LIST) 'T)
(FSET 'P2-COMPILAND-PROCESS-TYPE-DECLARATIONS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 
352) 297623 '(BODY) NIL)
(SYSTEM::%DEFKNOWN 'P2-COMPILAND-UNBOX-VARIABLE '(VARIABLE) 'T)
(FSET 'P2-COMPILAND-UNBOX-VARIABLE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 354) 
298711 '(VARIABLE) NIL)
(FSET 'ASSIGN-FIELD-NAME (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 355) 299451 '(LOCAL-FUNCTION) 
NIL)
(SYSTEM::%DEFKNOWN 'P2-COMPILAND '(T) 'T)
(FSET 'P2-COMPILAND (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 356) 299614 '(COMPILAND 
METHOD) NIL)
(FSET 'COMPILE-TO-JVM-CLASS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 357) 308781 
'(COMPILAND) "Returns ?what? ### a jvm class-file object?")
(FSET 'P2-WITH-INLINE-CODE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 358) 310494 '(FORM 
TARGET REPRESENTATION) NIL)
(FSET 'COMPILE-1 (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 359) 310850 '(COMPILAND 
STREAM) NIL)
(DEFVAR *COMPILER-ERROR-BAILOUT*)
(FSET 'MAKE-COMPILER-ERROR-FORM (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 360) 312198 
'(FORM) NIL)
(FSET 'COMPILE-DEFUN (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 361) 312352 '(NAME 
FORM ENVIRONMENT FILESPEC STREAM *DECLARE-INLINE*) "Compiles a lambda expression `form'. If `filespec' is NIL,
a random Java class name is generated, if it is non-NIL, it's used
to derive a Java class name from.

Returns the a abcl-class-file structure containing the description of the
generated class.")
(DEFVAR *CATCH-ERRORS* T)
(DEFVAR *LAST-ERROR-CONTEXT* NIL)
(FSET 'NOTE-ERROR-CONTEXT (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 363) 313718 'NIL 
NIL)
(DEFVAR *RESIGNAL-COMPILER-WARNINGS* NIL "Bind this to t inside slime compilation")
(FSET 'HANDLE-WARNING (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 364) 314250 '(CONDITION) 
NIL)
(FSET 'HANDLE-COMPILER-ERROR (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 366) 314620 
'(CONDITION) NIL)
(DEFVAR *IN-COMPILATION-UNIT* NIL)
(FSET 'WITH-COMPILATION-UNIT (MAKE-MACRO 'WITH-COMPILATION-UNIT (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 368)) 314883 '(OPTIONS &BODY BODY))
(FSET '%WITH-COMPILATION-UNIT (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 369) 314995 
'(FN &KEY OVERRIDE) NIL)
(FSET '%JVM-COMPILE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 385) 317144 '(NAME DEFINITION 
EXPR ENV) NIL)
(FSET 'JVM-COMPILE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 387) 318343 '(NAME &OPTIONAL 
DEFINITION) NIL)
(DEFVAR *FILE-COMPILATION* NIL)
(DEFVAR *PATHNAMES-GENERATOR* (FUNCTION MAKE-TEMP-FILE))
(FSET 'COMPILE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 391) 321499 '(NAME &OPTIONAL 
DEFINITION) NIL)
(FSET 'WITH-FILE-COMPILATION (MAKE-MACRO 'WITH-FILE-COMPILATION (SYSTEM::GET-FASL-FUNCTION 
*FASL-LOADER* 392)) 321576 '(&BODY BODY))
(FSET 'INITIALIZE-P2-HANDLERS (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 393) 321724 
'NIL NIL)
(INITIALIZE-P2-HANDLERS)
(DEFVAR *ENABLE-AUTOCOMPILE*)
(FSET 'AUTOCOMPILE (SYSTEM::GET-FASL-FUNCTION *FASL-LOADER* 394) 327981 '(FUNCTION) 
NIL)
(SETQ *ENABLE-AUTOCOMPILE* T)
(PROVIDE "COMPILER-PASS2")
